{"dependencies":[{"name":"/Users/markus/Documents/Coding/visGraph/package.json","includedInParent":true,"mtime":1526573007000},{"name":"/Users/markus/Documents/Coding/visGraph/node_modules/vis/package.json","includedInParent":true,"mtime":1526562716000},{"name":"/Users/markus/Documents/Coding/visGraph/node_modules/vis/.babelrc","includedInParent":true,"mtime":1499028059000},{"name":"./util","loc":{"line":1,"column":19}},{"name":"./Queue","loc":{"line":2,"column":20}}],"generated":{"js":"var util = require('./util');\r\nvar Queue = require('./Queue');\r\n\r\n/**\r\n * DataSet\r\n * // TODO: add a DataSet constructor DataSet(data, options)\r\n *\r\n * Usage:\r\n *     var dataSet = new DataSet({\r\n *         fieldId: '_id',\r\n *         type: {\r\n *             // ...\r\n *         }\r\n *     });\r\n *\r\n *     dataSet.add(item);\r\n *     dataSet.add(data);\r\n *     dataSet.update(item);\r\n *     dataSet.update(data);\r\n *     dataSet.remove(id);\r\n *     dataSet.remove(ids);\r\n *     var data = dataSet.get();\r\n *     var data = dataSet.get(id);\r\n *     var data = dataSet.get(ids);\r\n *     var data = dataSet.get(ids, options, data);\r\n *     dataSet.clear();\r\n *\r\n * A data set can:\r\n * - add/remove/update data\r\n * - gives triggers upon changes in the data\r\n * - can  import/export data in various data formats\r\n *\r\n * @param {Array} [data]    Optional array with initial data\r\n * @param {Object} [options]   Available options:\r\n *                             {string} fieldId Field name of the id in the\r\n *                                              items, 'id' by default.\r\n *                             {Object.<string, string} type\r\n *                                              A map with field names as key,\r\n *                                              and the field type as value.\r\n *                             {Object} queue   Queue changes to the DataSet,\r\n *                                              flush them all at once.\r\n *                                              Queue options:\r\n *                                              - {number} delay  Delay in ms, null by default\r\n *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\r\n * @constructor DataSet\r\n */\r\nfunction DataSet (data, options) {\r\n  // correctly read optional arguments\r\n  if (data && !Array.isArray(data)) {\r\n    options = data;\r\n    data = null;\r\n  }\r\n\r\n  this._options = options || {};\r\n  this._data = {};                                 // map with data indexed by id\r\n  this.length = 0;                                 // number of items in the DataSet\r\n  this._fieldId = this._options.fieldId || 'id';   // name of the field containing id\r\n  this._type = {};                                 // internal field types (NOTE: this can differ from this._options.type)\r\n\r\n  // all variants of a Date are internally stored as Date, so we can convert\r\n  // from everything to everything (also from ISODate to Number for example)\r\n  if (this._options.type) {\r\n    var fields = Object.keys(this._options.type);\r\n    for (var i = 0, len = fields.length; i < len; i++) {\r\n      var field = fields[i];\r\n      var value = this._options.type[field];\r\n      if (value == 'Date' || value == 'ISODate' || value == 'ASPDate') {\r\n        this._type[field] = 'Date';\r\n      }\r\n      else {\r\n        this._type[field] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  this._subscribers = {};  // event subscribers\r\n\r\n  // add initial data when provided\r\n  if (data) {\r\n    this.add(data);\r\n  }\r\n\r\n  this.setOptions(options);\r\n}\r\n\r\n/**\r\n * @param {Object} options   Available options:\r\n *                             {Object} queue   Queue changes to the DataSet,\r\n *                                              flush them all at once.\r\n *                                              Queue options:\r\n *                                              - {number} delay  Delay in ms, null by default\r\n *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\r\n */\r\nDataSet.prototype.setOptions = function(options) {\r\n  if (options && options.queue !== undefined) {\r\n    if (options.queue === false) {\r\n      // delete queue if loaded\r\n      if (this._queue) {\r\n        this._queue.destroy();\r\n        delete this._queue;\r\n      }\r\n    }\r\n    else {\r\n      // create queue and update its options\r\n      if (!this._queue) {\r\n        this._queue = Queue.extend(this, {\r\n          replace: ['add', 'update', 'remove']\r\n        });\r\n      }\r\n\r\n      if (typeof options.queue === 'object') {\r\n        this._queue.setOptions(options.queue);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Subscribe to an event, add an event listener\r\n * @param {string} event        Event name. Available events: 'add', 'update',\r\n *                              'remove'\r\n * @param {function} callback   Callback method. Called with three parameters:\r\n *                                  {string} event\r\n *                                  {Object | null} params\r\n *                                  {string | number} senderId\r\n */\r\nDataSet.prototype.on = function(event, callback) {\r\n  var subscribers = this._subscribers[event];\r\n  if (!subscribers) {\r\n    subscribers = [];\r\n    this._subscribers[event] = subscribers;\r\n  }\r\n\r\n  subscribers.push({\r\n    callback: callback\r\n  });\r\n};\r\n\r\n/**\r\n * Unsubscribe from an event, remove an event listener\r\n * @param {string} event\r\n * @param {function} callback\r\n */\r\nDataSet.prototype.off = function(event, callback) {\r\n  var subscribers = this._subscribers[event];\r\n  if (subscribers) {\r\n    this._subscribers[event] = subscribers.filter(listener => listener.callback != callback);\r\n  }\r\n};\r\n\r\n/**\r\n * Trigger an event\r\n * @param {string} event\r\n * @param {Object | null} params\r\n * @param {string} [senderId]       Optional id of the sender.\r\n * @private\r\n */\r\nDataSet.prototype._trigger = function (event, params, senderId) {\r\n  if (event == '*') {\r\n    throw new Error('Cannot trigger event *');\r\n  }\r\n\r\n  var subscribers = [];\r\n  if (event in this._subscribers) {\r\n    subscribers = subscribers.concat(this._subscribers[event]);\r\n  }\r\n  if ('*' in this._subscribers) {\r\n    subscribers = subscribers.concat(this._subscribers['*']);\r\n  }\r\n\r\n  for (var i = 0, len = subscribers.length; i < len; i++) {\r\n    var subscriber = subscribers[i];\r\n    if (subscriber.callback) {\r\n      subscriber.callback(event, params, senderId || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add data.\r\n * Adding an item will fail when there already is an item with the same id.\r\n * @param {Object | Array} data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} addedIds      Array with the ids of the added items\r\n */\r\nDataSet.prototype.add = function (data, senderId) {\r\n  var addedIds = [],\r\n      id,\r\n      me = this;\r\n\r\n  if (Array.isArray(data)) {\r\n    // Array\r\n    for (var i = 0, len = data.length; i < len; i++) {\r\n      id = me._addItem(data[i]);\r\n      addedIds.push(id);\r\n    }\r\n  }\r\n  else if (data && typeof data === 'object') {\r\n    // Single item\r\n    id = me._addItem(data);\r\n    addedIds.push(id);\r\n  }\r\n  else {\r\n    throw new Error('Unknown dataType');\r\n  }\r\n\r\n  if (addedIds.length) {\r\n    this._trigger('add', {items: addedIds}, senderId);\r\n  }\r\n\r\n  return addedIds;\r\n};\r\n\r\n/**\r\n * Update existing items. When an item does not exist, it will be created\r\n * @param {Object | Array} data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} updatedIds     The ids of the added or updated items\r\n * @throws {Error} Unknown Datatype\r\n */\r\nDataSet.prototype.update = function (data, senderId) {\r\n  var addedIds = [];\r\n  var updatedIds = [];\r\n  var oldData = [];\r\n  var updatedData = [];\r\n  var me = this;\r\n  var fieldId = me._fieldId;\r\n\r\n  var addOrUpdate = function (item) {\r\n    var id = item[fieldId];\r\n    if (me._data[id]) {\r\n      var oldItem = util.extend({}, me._data[id]);\r\n      // update item\r\n      id = me._updateItem(item);\r\n      updatedIds.push(id);\r\n      updatedData.push(item);\r\n      oldData.push(oldItem);\r\n    }\r\n    else {\r\n      // add new item\r\n      id = me._addItem(item);\r\n      addedIds.push(id);\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(data)) {\r\n    // Array\r\n    for (var i = 0, len = data.length; i < len; i++) {\r\n      if (data[i] && typeof data[i] === 'object'){\r\n        addOrUpdate(data[i]);\r\n      } else {\r\n        console.warn('Ignoring input item, which is not an object at index ' + i);\r\n      }\r\n    }\r\n  }\r\n  else if (data && typeof data === 'object') {\r\n    // Single item\r\n    addOrUpdate(data);\r\n  }\r\n  else {\r\n    throw new Error('Unknown dataType');\r\n  }\r\n\r\n  if (addedIds.length) {\r\n    this._trigger('add', {items: addedIds}, senderId);\r\n  }\r\n  if (updatedIds.length) {\r\n    var props = { items: updatedIds, oldData: oldData, data: updatedData };\r\n    // TODO: remove deprecated property 'data' some day\r\n    //Object.defineProperty(props, 'data', {\r\n    //  'get': (function() {\r\n    //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\r\n    //    return updatedData;\r\n    //  }).bind(this)\r\n    //});\r\n    this._trigger('update', props, senderId);\r\n  }\r\n\r\n  return addedIds.concat(updatedIds);\r\n};\r\n\r\n/**\r\n * Get a data item or multiple items.\r\n *\r\n * Usage:\r\n *\r\n *     get()\r\n *     get(options: Object)\r\n *\r\n *     get(id: number | string)\r\n *     get(id: number | string, options: Object)\r\n *\r\n *     get(ids: number[] | string[])\r\n *     get(ids: number[] | string[], options: Object)\r\n *\r\n * Where:\r\n *\r\n * {number | string} id         The id of an item\r\n * {number[] | string{}} ids    An array with ids of items\r\n * {Object} options             An Object with options. Available options:\r\n * {string} [returnType]        Type of data to be returned.\r\n *                              Can be 'Array' (default) or 'Object'.\r\n * {Object.<string, string>} [type]\r\n * {string[]} [fields]          field names to be returned\r\n * {function} [filter]          filter items\r\n * {string | function} [order]  Order the items by a field name or custom sort function.\r\n * @param {Array} args\r\n * @returns {DataSet}\r\n * @throws Error\r\n */\r\nDataSet.prototype.get = function (args) {  // eslint-disable-line no-unused-vars\r\n  var me = this;\r\n\r\n  // parse the arguments\r\n  var id, ids, options;\r\n  var firstType = util.getType(arguments[0]);\r\n  if (firstType == 'String' || firstType == 'Number') {\r\n    // get(id [, options])\r\n    id = arguments[0];\r\n    options = arguments[1];\r\n  }\r\n  else if (firstType == 'Array') {\r\n    // get(ids [, options])\r\n    ids = arguments[0];\r\n    options = arguments[1];\r\n  }\r\n  else {\r\n    // get([, options])\r\n    options = arguments[0];\r\n  }\r\n\r\n  // determine the return type\r\n  var returnType;\r\n  if (options && options.returnType) {\r\n    var allowedValues = ['Array', 'Object'];\r\n    returnType = allowedValues.indexOf(options.returnType) == -1 ? 'Array' : options.returnType;\r\n  }\r\n  else {\r\n    returnType = 'Array';\r\n  }\r\n\r\n  // build options\r\n  var type = options && options.type || this._options.type;\r\n  var filter = options && options.filter;\r\n  var items = [], item, itemIds, itemId, i, len;\r\n\r\n  // convert items\r\n  if (id != undefined) {\r\n    // return a single item\r\n    item = me._getItem(id, type);\r\n    if (item && filter && !filter(item)) {\r\n      item = null;\r\n    }\r\n  }\r\n  else if (ids != undefined) {\r\n    // return a subset of items\r\n    for (i = 0, len = ids.length; i < len; i++) {\r\n      item = me._getItem(ids[i], type);\r\n      if (!filter || filter(item)) {\r\n        items.push(item);\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    // return all items\r\n    itemIds = Object.keys(this._data);\r\n    for (i = 0, len = itemIds.length; i < len; i++) {\r\n      itemId = itemIds[i];\r\n      item = me._getItem(itemId, type);\r\n      if (!filter || filter(item)) {\r\n        items.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  // order the results\r\n  if (options && options.order && id == undefined) {\r\n    this._sort(items, options.order);\r\n  }\r\n\r\n  // filter fields of the items\r\n  if (options && options.fields) {\r\n    var fields = options.fields;\r\n    if (id != undefined) {\r\n      item = this._filterFields(item, fields);\r\n    }\r\n    else {\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        items[i] = this._filterFields(items[i], fields);\r\n      }\r\n    }\r\n  }\r\n\r\n  // return the results\r\n  if (returnType == 'Object') {\r\n    var result = {},\r\n        resultant;\r\n    for (i = 0, len = items.length; i < len; i++) {\r\n      resultant = items[i];\r\n      result[resultant.id] = resultant;\r\n    }\r\n    return result;\r\n  }\r\n  else {\r\n    if (id != undefined) {\r\n      // a single item\r\n      return item;\r\n    }\r\n    else {\r\n      // just return our array\r\n      return items;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get ids of all items or from a filtered set of items.\r\n * @param {Object} [options]    An Object with options. Available options:\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Array.<string|number>} ids\r\n */\r\nDataSet.prototype.getIds = function (options) {\r\n  var data = this._data,\r\n      filter = options && options.filter,\r\n      order = options && options.order,\r\n      type = options && options.type || this._options.type,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      id,\r\n      item,\r\n      items,\r\n      ids = [];\r\n\r\n  if (filter) {\r\n    // get filtered items\r\n    if (order) {\r\n      // create ordered list\r\n      items = [];\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = this._getItem(id, type);\r\n        if (filter(item)) {\r\n          items.push(item);\r\n        }\r\n      }\r\n\r\n      this._sort(items, order);\r\n\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        ids.push(items[i][this._fieldId]);\r\n      }\r\n    }\r\n    else {\r\n      // create unordered list\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = this._getItem(id, type);\r\n        if (filter(item)) {\r\n          ids.push(item[this._fieldId]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    // get all items\r\n    if (order) {\r\n      // create an ordered list\r\n      items = [];\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        items.push(data[id]);\r\n      }\r\n\r\n      this._sort(items, order);\r\n\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        ids.push(items[i][this._fieldId]);\r\n      }\r\n    }\r\n    else {\r\n      // create unordered list\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = data[id];\r\n        ids.push(item[this._fieldId]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ids;\r\n};\r\n\r\n/**\r\n * Returns the DataSet itself. Is overwritten for example by the DataView,\r\n * which returns the DataSet it is connected to instead.\r\n * @returns {DataSet}\r\n */\r\nDataSet.prototype.getDataSet = function () {\r\n  return this;\r\n};\r\n\r\n/**\r\n * Execute a callback function for every item in the dataset.\r\n * @param {function} callback\r\n * @param {Object} [options]    Available options:\r\n *                              {Object.<string, string>} [type]\r\n *                              {string[]} [fields] filter fields\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n */\r\nDataSet.prototype.forEach = function (callback, options) {\r\n  var filter = options && options.filter,\r\n      type = options && options.type || this._options.type,\r\n      data = this._data,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      item,\r\n      id;\r\n\r\n  if (options && options.order) {\r\n    // execute forEach on ordered list\r\n    var items = this.get(options);\r\n\r\n    for (i = 0, len = items.length; i < len; i++) {\r\n      item = items[i];\r\n      id = item[this._fieldId];\r\n      callback(item, id);\r\n    }\r\n  }\r\n  else {\r\n    // unordered\r\n    for (i = 0, len = itemIds.length; i < len; i++) {\r\n      id = itemIds[i];\r\n      item = this._getItem(id, type);\r\n      if (!filter || filter(item)) {\r\n        callback(item, id);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Map every item in the dataset.\r\n * @param {function} callback\r\n * @param {Object} [options]    Available options:\r\n *                              {Object.<string, string>} [type]\r\n *                              {string[]} [fields] filter fields\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Object[]} mappedItems\r\n */\r\nDataSet.prototype.map = function (callback, options) {\r\n  var filter = options && options.filter,\r\n      type = options && options.type || this._options.type,\r\n      mappedItems = [],\r\n      data = this._data,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      id,\r\n      item;\r\n\r\n  // convert and filter items\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    id = itemIds[i];\r\n    item = this._getItem(id, type);\r\n    if (!filter || filter(item)) {\r\n      mappedItems.push(callback(item, id));\r\n    }\r\n  }\r\n\r\n  // order items\r\n  if (options && options.order) {\r\n    this._sort(mappedItems, options.order);\r\n  }\r\n\r\n  return mappedItems;\r\n};\r\n\r\n/**\r\n * Filter the fields of an item\r\n * @param {Object | null} item\r\n * @param {string[]} fields     Field names\r\n * @return {Object | null} filteredItem or null if no item is provided\r\n * @private\r\n */\r\nDataSet.prototype._filterFields = function (item, fields) {\r\n  if (!item) { // item is null\r\n    return item;\r\n  }\r\n\r\n  var filteredItem = {},\r\n      itemFields = Object.keys(item),\r\n      len = itemFields.length,\r\n      i,\r\n      field;\r\n\r\n  if(Array.isArray(fields)){\r\n    for (i = 0; i < len; i++) {\r\n      field = itemFields[i];\r\n      if (fields.indexOf(field) != -1) {\r\n        filteredItem[field] = item[field];\r\n      }\r\n    }\r\n  }else{\r\n    for (i = 0; i < len; i++) {\r\n      field = itemFields[i];\r\n      if (fields.hasOwnProperty(field)) {\r\n        filteredItem[fields[field]] = item[field];\r\n      }\r\n    }\r\n  }\r\n\r\n  return filteredItem;\r\n};\r\n\r\n/**\r\n * Sort the provided array with items\r\n * @param {Object[]} items\r\n * @param {string | function} order      A field name or custom sort function.\r\n * @private\r\n */\r\nDataSet.prototype._sort = function (items, order) {\r\n  if (util.isString(order)) {\r\n    // order by provided field name\r\n    var name = order; // field name\r\n    items.sort(function (a, b) {\r\n      var av = a[name];\r\n      var bv = b[name];\r\n      return (av > bv) ? 1 : ((av < bv) ? -1 : 0);\r\n    });\r\n  }\r\n  else if (typeof order === 'function') {\r\n    // order by sort function\r\n    items.sort(order);\r\n  }\r\n  // TODO: extend order by an Object {field:string, direction:string}\r\n  //       where direction can be 'asc' or 'desc'\r\n  else {\r\n    throw new TypeError('Order must be a function or a string');\r\n  }\r\n};\r\n\r\n/**\r\n * Remove an object by pointer or by id\r\n * @param {string | number | Object | Array.<string|number>} id Object or id, or an array with\r\n *                                              objects or ids to be removed\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} removedIds\r\n */\r\nDataSet.prototype.remove = function (id, senderId) {\r\n  var removedIds = [],\r\n      removedItems = [],\r\n      ids = [],\r\n      i, len, itemId, item;\r\n\r\n  // force everything to be an array for simplicity\r\n  ids = Array.isArray(id) ? id : [id];\r\n\r\n  for (i = 0, len = ids.length; i < len; i++) {\r\n    item = this._remove(ids[i]);\r\n    if (item) {\r\n      itemId = item[this._fieldId];\r\n      if (itemId != undefined) {\r\n        removedIds.push(itemId);\r\n        removedItems.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (removedIds.length) {\r\n    this._trigger('remove', {items: removedIds, oldData: removedItems}, senderId);\r\n  }\r\n\r\n  return removedIds;\r\n};\r\n\r\n/**\r\n * Remove an item by its id\r\n * @param {number | string | Object} id   id or item\r\n * @returns {number | string | null} id\r\n * @private\r\n */\r\nDataSet.prototype._remove = function (id) {\r\n  var item,\r\n      ident;\r\n\r\n  // confirm the id to use based on the args type\r\n  if (util.isNumber(id) || util.isString(id)) {\r\n    ident = id;\r\n  }\r\n  else if (id && typeof id === 'object') {\r\n    ident = id[this._fieldId]; // look for the identifier field using _fieldId\r\n  }\r\n\r\n  // do the remove if the item is found\r\n  if (ident !== undefined && this._data[ident]) {\r\n    item = this._data[ident];\r\n    delete this._data[ident];\r\n    this.length--;\r\n    return item;\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Clear the data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} removedIds    The ids of all removed items\r\n */\r\nDataSet.prototype.clear = function (senderId) {\r\n  var i, len;\r\n  var ids = Object.keys(this._data);\r\n  var items = [];\r\n\r\n  for (i = 0, len = ids.length; i < len; i++) {\r\n    items.push(this._data[ids[i]]);\r\n  }\r\n\r\n  this._data = {};\r\n  this.length = 0;\r\n\r\n  this._trigger('remove', {items: ids, oldData: items}, senderId);\r\n\r\n  return ids;\r\n};\r\n\r\n/**\r\n * Find the item with maximum value of a specified field\r\n * @param {string} field\r\n * @return {Object | null} item  Item containing max value, or null if no items\r\n */\r\nDataSet.prototype.max = function (field) {\r\n  var data = this._data,\r\n      itemIds = Object.keys(data),\r\n      max = null,\r\n      maxField = null,\r\n      i,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var itemField = item[field];\r\n    if (itemField != null && (!max || itemField > maxField)) {\r\n      max = item;\r\n      maxField = itemField;\r\n    }\r\n  }\r\n\r\n  return max;\r\n};\r\n\r\n/**\r\n * Find the item with minimum value of a specified field\r\n * @param {string} field\r\n * @return {Object | null} item  Item containing max value, or null if no items\r\n */\r\nDataSet.prototype.min = function (field) {\r\n  var data = this._data,\r\n      itemIds = Object.keys(data),\r\n      min = null,\r\n      minField = null,\r\n      i,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var itemField = item[field];\r\n    if (itemField != null && (!min || itemField < minField)) {\r\n      min = item;\r\n      minField = itemField;\r\n    }\r\n  }\r\n\r\n  return min;\r\n};\r\n\r\n/**\r\n * Find all distinct values of a specified field\r\n * @param {string} field\r\n * @return {Array} values  Array containing all distinct values. If data items\r\n *                         do not contain the specified field are ignored.\r\n *                         The returned array is unordered.\r\n */\r\nDataSet.prototype.distinct = function (field) {\r\n  var data = this._data;\r\n  var itemIds = Object.keys(data);\r\n  var values = [];\r\n  var fieldType = this._options.type && this._options.type[field] || null;\r\n  var count = 0;\r\n  var i,\r\n      j,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var value = item[field];\r\n    var exists = false;\r\n    for (j = 0; j < count; j++) {\r\n      if (values[j] == value) {\r\n        exists = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!exists && (value !== undefined)) {\r\n      values[count] = value;\r\n      count++;\r\n    }\r\n  }\r\n\r\n  if (fieldType) {\r\n    for (i = 0, len = values.length; i < len; i++) {\r\n      values[i] = util.convert(values[i], fieldType);\r\n    }\r\n  }\r\n\r\n  return values;\r\n};\r\n\r\n/**\r\n * Add a single item. Will fail when an item with the same id already exists.\r\n * @param {Object} item\r\n * @return {string} id\r\n * @private\r\n */\r\nDataSet.prototype._addItem = function (item) {\r\n  var id = item[this._fieldId];\r\n\r\n  if (id != undefined) {\r\n    // check whether this id is already taken\r\n    if (this._data[id]) {\r\n      // item already exists\r\n      throw new Error('Cannot add item: item with id ' + id + ' already exists');\r\n    }\r\n  }\r\n  else {\r\n    // generate an id\r\n    id = util.randomUUID();\r\n    item[this._fieldId] = id;\r\n  }\r\n\r\n  var d = {},\r\n      fields = Object.keys(item),\r\n      i,\r\n      len;\r\n  for (i = 0, len = fields.length; i < len; i++) {\r\n    var field = fields[i];\r\n    var fieldType = this._type[field];  // type may be undefined\r\n    d[field] = util.convert(item[field], fieldType);\r\n  }\r\n  this._data[id] = d;\r\n  this.length++;\r\n\r\n  return id;\r\n};\r\n\r\n/**\r\n * Get an item. Fields can be converted to a specific type\r\n * @param {string} id\r\n * @param {Object.<string, string>} [types]  field types to convert\r\n * @return {Object | null} item\r\n * @private\r\n */\r\nDataSet.prototype._getItem = function (id, types) {\r\n  var field, value, i, len;\r\n\r\n  // get the item from the dataset\r\n  var raw = this._data[id];\r\n  if (!raw) {\r\n    return null;\r\n  }\r\n\r\n  // convert the items field types\r\n  var converted = {},\r\n      fields = Object.keys(raw);\r\n\r\n  if (types) {\r\n    for (i = 0, len = fields.length; i < len; i++) {\r\n      field = fields[i];\r\n      value = raw[field];\r\n      converted[field] = util.convert(value, types[field]);\r\n    }\r\n  }\r\n  else {\r\n    // no field types specified, no converting needed\r\n    for (i = 0, len = fields.length; i < len; i++) {\r\n      field = fields[i];\r\n      value = raw[field];\r\n      converted[field] = value;\r\n    }\r\n  }\r\n\r\n  if (!converted[this._fieldId]) {\r\n    converted[this._fieldId] = raw.id;\r\n  }\r\n\r\n  return converted;\r\n};\r\n\r\n/**\r\n * Update a single item: merge with existing item.\r\n * Will fail when the item has no id, or when there does not exist an item\r\n * with the same id.\r\n * @param {Object} item\r\n * @return {string} id\r\n * @private\r\n */\r\nDataSet.prototype._updateItem = function (item) {\r\n  var id = item[this._fieldId];\r\n  if (id == undefined) {\r\n    throw new Error('Cannot update item: item has no id (item: ' + JSON.stringify(item) + ')');\r\n  }\r\n  var d = this._data[id];\r\n  if (!d) {\r\n    // item doesn't exist\r\n    throw new Error('Cannot update item: no item with id ' + id + ' found');\r\n  }\r\n\r\n  // merge with current item\r\n  var fields = Object.keys(item);\r\n  for (var i = 0, len = fields.length; i < len; i++) {\r\n    var field = fields[i];\r\n    var fieldType = this._type[field];  // type may be undefined\r\n    d[field] = util.convert(item[field], fieldType);\r\n  }\r\n\r\n  return id;\r\n};\r\n\r\nmodule.exports = DataSet;\r\n","map":{"mappings":[{"source":"node_modules/vis/lib/DataSet.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/vis/lib/DataSet.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}}],"sources":{"node_modules/vis/lib/DataSet.js":"var util = require('./util');\r\nvar Queue = require('./Queue');\r\n\r\n/**\r\n * DataSet\r\n * // TODO: add a DataSet constructor DataSet(data, options)\r\n *\r\n * Usage:\r\n *     var dataSet = new DataSet({\r\n *         fieldId: '_id',\r\n *         type: {\r\n *             // ...\r\n *         }\r\n *     });\r\n *\r\n *     dataSet.add(item);\r\n *     dataSet.add(data);\r\n *     dataSet.update(item);\r\n *     dataSet.update(data);\r\n *     dataSet.remove(id);\r\n *     dataSet.remove(ids);\r\n *     var data = dataSet.get();\r\n *     var data = dataSet.get(id);\r\n *     var data = dataSet.get(ids);\r\n *     var data = dataSet.get(ids, options, data);\r\n *     dataSet.clear();\r\n *\r\n * A data set can:\r\n * - add/remove/update data\r\n * - gives triggers upon changes in the data\r\n * - can  import/export data in various data formats\r\n *\r\n * @param {Array} [data]    Optional array with initial data\r\n * @param {Object} [options]   Available options:\r\n *                             {string} fieldId Field name of the id in the\r\n *                                              items, 'id' by default.\r\n *                             {Object.<string, string} type\r\n *                                              A map with field names as key,\r\n *                                              and the field type as value.\r\n *                             {Object} queue   Queue changes to the DataSet,\r\n *                                              flush them all at once.\r\n *                                              Queue options:\r\n *                                              - {number} delay  Delay in ms, null by default\r\n *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\r\n * @constructor DataSet\r\n */\r\nfunction DataSet (data, options) {\r\n  // correctly read optional arguments\r\n  if (data && !Array.isArray(data)) {\r\n    options = data;\r\n    data = null;\r\n  }\r\n\r\n  this._options = options || {};\r\n  this._data = {};                                 // map with data indexed by id\r\n  this.length = 0;                                 // number of items in the DataSet\r\n  this._fieldId = this._options.fieldId || 'id';   // name of the field containing id\r\n  this._type = {};                                 // internal field types (NOTE: this can differ from this._options.type)\r\n\r\n  // all variants of a Date are internally stored as Date, so we can convert\r\n  // from everything to everything (also from ISODate to Number for example)\r\n  if (this._options.type) {\r\n    var fields = Object.keys(this._options.type);\r\n    for (var i = 0, len = fields.length; i < len; i++) {\r\n      var field = fields[i];\r\n      var value = this._options.type[field];\r\n      if (value == 'Date' || value == 'ISODate' || value == 'ASPDate') {\r\n        this._type[field] = 'Date';\r\n      }\r\n      else {\r\n        this._type[field] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  this._subscribers = {};  // event subscribers\r\n\r\n  // add initial data when provided\r\n  if (data) {\r\n    this.add(data);\r\n  }\r\n\r\n  this.setOptions(options);\r\n}\r\n\r\n/**\r\n * @param {Object} options   Available options:\r\n *                             {Object} queue   Queue changes to the DataSet,\r\n *                                              flush them all at once.\r\n *                                              Queue options:\r\n *                                              - {number} delay  Delay in ms, null by default\r\n *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\r\n */\r\nDataSet.prototype.setOptions = function(options) {\r\n  if (options && options.queue !== undefined) {\r\n    if (options.queue === false) {\r\n      // delete queue if loaded\r\n      if (this._queue) {\r\n        this._queue.destroy();\r\n        delete this._queue;\r\n      }\r\n    }\r\n    else {\r\n      // create queue and update its options\r\n      if (!this._queue) {\r\n        this._queue = Queue.extend(this, {\r\n          replace: ['add', 'update', 'remove']\r\n        });\r\n      }\r\n\r\n      if (typeof options.queue === 'object') {\r\n        this._queue.setOptions(options.queue);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Subscribe to an event, add an event listener\r\n * @param {string} event        Event name. Available events: 'add', 'update',\r\n *                              'remove'\r\n * @param {function} callback   Callback method. Called with three parameters:\r\n *                                  {string} event\r\n *                                  {Object | null} params\r\n *                                  {string | number} senderId\r\n */\r\nDataSet.prototype.on = function(event, callback) {\r\n  var subscribers = this._subscribers[event];\r\n  if (!subscribers) {\r\n    subscribers = [];\r\n    this._subscribers[event] = subscribers;\r\n  }\r\n\r\n  subscribers.push({\r\n    callback: callback\r\n  });\r\n};\r\n\r\n/**\r\n * Unsubscribe from an event, remove an event listener\r\n * @param {string} event\r\n * @param {function} callback\r\n */\r\nDataSet.prototype.off = function(event, callback) {\r\n  var subscribers = this._subscribers[event];\r\n  if (subscribers) {\r\n    this._subscribers[event] = subscribers.filter(listener => listener.callback != callback);\r\n  }\r\n};\r\n\r\n/**\r\n * Trigger an event\r\n * @param {string} event\r\n * @param {Object | null} params\r\n * @param {string} [senderId]       Optional id of the sender.\r\n * @private\r\n */\r\nDataSet.prototype._trigger = function (event, params, senderId) {\r\n  if (event == '*') {\r\n    throw new Error('Cannot trigger event *');\r\n  }\r\n\r\n  var subscribers = [];\r\n  if (event in this._subscribers) {\r\n    subscribers = subscribers.concat(this._subscribers[event]);\r\n  }\r\n  if ('*' in this._subscribers) {\r\n    subscribers = subscribers.concat(this._subscribers['*']);\r\n  }\r\n\r\n  for (var i = 0, len = subscribers.length; i < len; i++) {\r\n    var subscriber = subscribers[i];\r\n    if (subscriber.callback) {\r\n      subscriber.callback(event, params, senderId || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add data.\r\n * Adding an item will fail when there already is an item with the same id.\r\n * @param {Object | Array} data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} addedIds      Array with the ids of the added items\r\n */\r\nDataSet.prototype.add = function (data, senderId) {\r\n  var addedIds = [],\r\n      id,\r\n      me = this;\r\n\r\n  if (Array.isArray(data)) {\r\n    // Array\r\n    for (var i = 0, len = data.length; i < len; i++) {\r\n      id = me._addItem(data[i]);\r\n      addedIds.push(id);\r\n    }\r\n  }\r\n  else if (data && typeof data === 'object') {\r\n    // Single item\r\n    id = me._addItem(data);\r\n    addedIds.push(id);\r\n  }\r\n  else {\r\n    throw new Error('Unknown dataType');\r\n  }\r\n\r\n  if (addedIds.length) {\r\n    this._trigger('add', {items: addedIds}, senderId);\r\n  }\r\n\r\n  return addedIds;\r\n};\r\n\r\n/**\r\n * Update existing items. When an item does not exist, it will be created\r\n * @param {Object | Array} data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} updatedIds     The ids of the added or updated items\r\n * @throws {Error} Unknown Datatype\r\n */\r\nDataSet.prototype.update = function (data, senderId) {\r\n  var addedIds = [];\r\n  var updatedIds = [];\r\n  var oldData = [];\r\n  var updatedData = [];\r\n  var me = this;\r\n  var fieldId = me._fieldId;\r\n\r\n  var addOrUpdate = function (item) {\r\n    var id = item[fieldId];\r\n    if (me._data[id]) {\r\n      var oldItem = util.extend({}, me._data[id]);\r\n      // update item\r\n      id = me._updateItem(item);\r\n      updatedIds.push(id);\r\n      updatedData.push(item);\r\n      oldData.push(oldItem);\r\n    }\r\n    else {\r\n      // add new item\r\n      id = me._addItem(item);\r\n      addedIds.push(id);\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(data)) {\r\n    // Array\r\n    for (var i = 0, len = data.length; i < len; i++) {\r\n      if (data[i] && typeof data[i] === 'object'){\r\n        addOrUpdate(data[i]);\r\n      } else {\r\n        console.warn('Ignoring input item, which is not an object at index ' + i);\r\n      }\r\n    }\r\n  }\r\n  else if (data && typeof data === 'object') {\r\n    // Single item\r\n    addOrUpdate(data);\r\n  }\r\n  else {\r\n    throw new Error('Unknown dataType');\r\n  }\r\n\r\n  if (addedIds.length) {\r\n    this._trigger('add', {items: addedIds}, senderId);\r\n  }\r\n  if (updatedIds.length) {\r\n    var props = { items: updatedIds, oldData: oldData, data: updatedData };\r\n    // TODO: remove deprecated property 'data' some day\r\n    //Object.defineProperty(props, 'data', {\r\n    //  'get': (function() {\r\n    //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\r\n    //    return updatedData;\r\n    //  }).bind(this)\r\n    //});\r\n    this._trigger('update', props, senderId);\r\n  }\r\n\r\n  return addedIds.concat(updatedIds);\r\n};\r\n\r\n/**\r\n * Get a data item or multiple items.\r\n *\r\n * Usage:\r\n *\r\n *     get()\r\n *     get(options: Object)\r\n *\r\n *     get(id: number | string)\r\n *     get(id: number | string, options: Object)\r\n *\r\n *     get(ids: number[] | string[])\r\n *     get(ids: number[] | string[], options: Object)\r\n *\r\n * Where:\r\n *\r\n * {number | string} id         The id of an item\r\n * {number[] | string{}} ids    An array with ids of items\r\n * {Object} options             An Object with options. Available options:\r\n * {string} [returnType]        Type of data to be returned.\r\n *                              Can be 'Array' (default) or 'Object'.\r\n * {Object.<string, string>} [type]\r\n * {string[]} [fields]          field names to be returned\r\n * {function} [filter]          filter items\r\n * {string | function} [order]  Order the items by a field name or custom sort function.\r\n * @param {Array} args\r\n * @returns {DataSet}\r\n * @throws Error\r\n */\r\nDataSet.prototype.get = function (args) {  // eslint-disable-line no-unused-vars\r\n  var me = this;\r\n\r\n  // parse the arguments\r\n  var id, ids, options;\r\n  var firstType = util.getType(arguments[0]);\r\n  if (firstType == 'String' || firstType == 'Number') {\r\n    // get(id [, options])\r\n    id = arguments[0];\r\n    options = arguments[1];\r\n  }\r\n  else if (firstType == 'Array') {\r\n    // get(ids [, options])\r\n    ids = arguments[0];\r\n    options = arguments[1];\r\n  }\r\n  else {\r\n    // get([, options])\r\n    options = arguments[0];\r\n  }\r\n\r\n  // determine the return type\r\n  var returnType;\r\n  if (options && options.returnType) {\r\n    var allowedValues = ['Array', 'Object'];\r\n    returnType = allowedValues.indexOf(options.returnType) == -1 ? 'Array' : options.returnType;\r\n  }\r\n  else {\r\n    returnType = 'Array';\r\n  }\r\n\r\n  // build options\r\n  var type = options && options.type || this._options.type;\r\n  var filter = options && options.filter;\r\n  var items = [], item, itemIds, itemId, i, len;\r\n\r\n  // convert items\r\n  if (id != undefined) {\r\n    // return a single item\r\n    item = me._getItem(id, type);\r\n    if (item && filter && !filter(item)) {\r\n      item = null;\r\n    }\r\n  }\r\n  else if (ids != undefined) {\r\n    // return a subset of items\r\n    for (i = 0, len = ids.length; i < len; i++) {\r\n      item = me._getItem(ids[i], type);\r\n      if (!filter || filter(item)) {\r\n        items.push(item);\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    // return all items\r\n    itemIds = Object.keys(this._data);\r\n    for (i = 0, len = itemIds.length; i < len; i++) {\r\n      itemId = itemIds[i];\r\n      item = me._getItem(itemId, type);\r\n      if (!filter || filter(item)) {\r\n        items.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  // order the results\r\n  if (options && options.order && id == undefined) {\r\n    this._sort(items, options.order);\r\n  }\r\n\r\n  // filter fields of the items\r\n  if (options && options.fields) {\r\n    var fields = options.fields;\r\n    if (id != undefined) {\r\n      item = this._filterFields(item, fields);\r\n    }\r\n    else {\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        items[i] = this._filterFields(items[i], fields);\r\n      }\r\n    }\r\n  }\r\n\r\n  // return the results\r\n  if (returnType == 'Object') {\r\n    var result = {},\r\n        resultant;\r\n    for (i = 0, len = items.length; i < len; i++) {\r\n      resultant = items[i];\r\n      result[resultant.id] = resultant;\r\n    }\r\n    return result;\r\n  }\r\n  else {\r\n    if (id != undefined) {\r\n      // a single item\r\n      return item;\r\n    }\r\n    else {\r\n      // just return our array\r\n      return items;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get ids of all items or from a filtered set of items.\r\n * @param {Object} [options]    An Object with options. Available options:\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Array.<string|number>} ids\r\n */\r\nDataSet.prototype.getIds = function (options) {\r\n  var data = this._data,\r\n      filter = options && options.filter,\r\n      order = options && options.order,\r\n      type = options && options.type || this._options.type,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      id,\r\n      item,\r\n      items,\r\n      ids = [];\r\n\r\n  if (filter) {\r\n    // get filtered items\r\n    if (order) {\r\n      // create ordered list\r\n      items = [];\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = this._getItem(id, type);\r\n        if (filter(item)) {\r\n          items.push(item);\r\n        }\r\n      }\r\n\r\n      this._sort(items, order);\r\n\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        ids.push(items[i][this._fieldId]);\r\n      }\r\n    }\r\n    else {\r\n      // create unordered list\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = this._getItem(id, type);\r\n        if (filter(item)) {\r\n          ids.push(item[this._fieldId]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    // get all items\r\n    if (order) {\r\n      // create an ordered list\r\n      items = [];\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        items.push(data[id]);\r\n      }\r\n\r\n      this._sort(items, order);\r\n\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        ids.push(items[i][this._fieldId]);\r\n      }\r\n    }\r\n    else {\r\n      // create unordered list\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = data[id];\r\n        ids.push(item[this._fieldId]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ids;\r\n};\r\n\r\n/**\r\n * Returns the DataSet itself. Is overwritten for example by the DataView,\r\n * which returns the DataSet it is connected to instead.\r\n * @returns {DataSet}\r\n */\r\nDataSet.prototype.getDataSet = function () {\r\n  return this;\r\n};\r\n\r\n/**\r\n * Execute a callback function for every item in the dataset.\r\n * @param {function} callback\r\n * @param {Object} [options]    Available options:\r\n *                              {Object.<string, string>} [type]\r\n *                              {string[]} [fields] filter fields\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n */\r\nDataSet.prototype.forEach = function (callback, options) {\r\n  var filter = options && options.filter,\r\n      type = options && options.type || this._options.type,\r\n      data = this._data,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      item,\r\n      id;\r\n\r\n  if (options && options.order) {\r\n    // execute forEach on ordered list\r\n    var items = this.get(options);\r\n\r\n    for (i = 0, len = items.length; i < len; i++) {\r\n      item = items[i];\r\n      id = item[this._fieldId];\r\n      callback(item, id);\r\n    }\r\n  }\r\n  else {\r\n    // unordered\r\n    for (i = 0, len = itemIds.length; i < len; i++) {\r\n      id = itemIds[i];\r\n      item = this._getItem(id, type);\r\n      if (!filter || filter(item)) {\r\n        callback(item, id);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Map every item in the dataset.\r\n * @param {function} callback\r\n * @param {Object} [options]    Available options:\r\n *                              {Object.<string, string>} [type]\r\n *                              {string[]} [fields] filter fields\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Object[]} mappedItems\r\n */\r\nDataSet.prototype.map = function (callback, options) {\r\n  var filter = options && options.filter,\r\n      type = options && options.type || this._options.type,\r\n      mappedItems = [],\r\n      data = this._data,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      id,\r\n      item;\r\n\r\n  // convert and filter items\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    id = itemIds[i];\r\n    item = this._getItem(id, type);\r\n    if (!filter || filter(item)) {\r\n      mappedItems.push(callback(item, id));\r\n    }\r\n  }\r\n\r\n  // order items\r\n  if (options && options.order) {\r\n    this._sort(mappedItems, options.order);\r\n  }\r\n\r\n  return mappedItems;\r\n};\r\n\r\n/**\r\n * Filter the fields of an item\r\n * @param {Object | null} item\r\n * @param {string[]} fields     Field names\r\n * @return {Object | null} filteredItem or null if no item is provided\r\n * @private\r\n */\r\nDataSet.prototype._filterFields = function (item, fields) {\r\n  if (!item) { // item is null\r\n    return item;\r\n  }\r\n\r\n  var filteredItem = {},\r\n      itemFields = Object.keys(item),\r\n      len = itemFields.length,\r\n      i,\r\n      field;\r\n\r\n  if(Array.isArray(fields)){\r\n    for (i = 0; i < len; i++) {\r\n      field = itemFields[i];\r\n      if (fields.indexOf(field) != -1) {\r\n        filteredItem[field] = item[field];\r\n      }\r\n    }\r\n  }else{\r\n    for (i = 0; i < len; i++) {\r\n      field = itemFields[i];\r\n      if (fields.hasOwnProperty(field)) {\r\n        filteredItem[fields[field]] = item[field];\r\n      }\r\n    }\r\n  }\r\n\r\n  return filteredItem;\r\n};\r\n\r\n/**\r\n * Sort the provided array with items\r\n * @param {Object[]} items\r\n * @param {string | function} order      A field name or custom sort function.\r\n * @private\r\n */\r\nDataSet.prototype._sort = function (items, order) {\r\n  if (util.isString(order)) {\r\n    // order by provided field name\r\n    var name = order; // field name\r\n    items.sort(function (a, b) {\r\n      var av = a[name];\r\n      var bv = b[name];\r\n      return (av > bv) ? 1 : ((av < bv) ? -1 : 0);\r\n    });\r\n  }\r\n  else if (typeof order === 'function') {\r\n    // order by sort function\r\n    items.sort(order);\r\n  }\r\n  // TODO: extend order by an Object {field:string, direction:string}\r\n  //       where direction can be 'asc' or 'desc'\r\n  else {\r\n    throw new TypeError('Order must be a function or a string');\r\n  }\r\n};\r\n\r\n/**\r\n * Remove an object by pointer or by id\r\n * @param {string | number | Object | Array.<string|number>} id Object or id, or an array with\r\n *                                              objects or ids to be removed\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} removedIds\r\n */\r\nDataSet.prototype.remove = function (id, senderId) {\r\n  var removedIds = [],\r\n      removedItems = [],\r\n      ids = [],\r\n      i, len, itemId, item;\r\n\r\n  // force everything to be an array for simplicity\r\n  ids = Array.isArray(id) ? id : [id];\r\n\r\n  for (i = 0, len = ids.length; i < len; i++) {\r\n    item = this._remove(ids[i]);\r\n    if (item) {\r\n      itemId = item[this._fieldId];\r\n      if (itemId != undefined) {\r\n        removedIds.push(itemId);\r\n        removedItems.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (removedIds.length) {\r\n    this._trigger('remove', {items: removedIds, oldData: removedItems}, senderId);\r\n  }\r\n\r\n  return removedIds;\r\n};\r\n\r\n/**\r\n * Remove an item by its id\r\n * @param {number | string | Object} id   id or item\r\n * @returns {number | string | null} id\r\n * @private\r\n */\r\nDataSet.prototype._remove = function (id) {\r\n  var item,\r\n      ident;\r\n\r\n  // confirm the id to use based on the args type\r\n  if (util.isNumber(id) || util.isString(id)) {\r\n    ident = id;\r\n  }\r\n  else if (id && typeof id === 'object') {\r\n    ident = id[this._fieldId]; // look for the identifier field using _fieldId\r\n  }\r\n\r\n  // do the remove if the item is found\r\n  if (ident !== undefined && this._data[ident]) {\r\n    item = this._data[ident];\r\n    delete this._data[ident];\r\n    this.length--;\r\n    return item;\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Clear the data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} removedIds    The ids of all removed items\r\n */\r\nDataSet.prototype.clear = function (senderId) {\r\n  var i, len;\r\n  var ids = Object.keys(this._data);\r\n  var items = [];\r\n\r\n  for (i = 0, len = ids.length; i < len; i++) {\r\n    items.push(this._data[ids[i]]);\r\n  }\r\n\r\n  this._data = {};\r\n  this.length = 0;\r\n\r\n  this._trigger('remove', {items: ids, oldData: items}, senderId);\r\n\r\n  return ids;\r\n};\r\n\r\n/**\r\n * Find the item with maximum value of a specified field\r\n * @param {string} field\r\n * @return {Object | null} item  Item containing max value, or null if no items\r\n */\r\nDataSet.prototype.max = function (field) {\r\n  var data = this._data,\r\n      itemIds = Object.keys(data),\r\n      max = null,\r\n      maxField = null,\r\n      i,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var itemField = item[field];\r\n    if (itemField != null && (!max || itemField > maxField)) {\r\n      max = item;\r\n      maxField = itemField;\r\n    }\r\n  }\r\n\r\n  return max;\r\n};\r\n\r\n/**\r\n * Find the item with minimum value of a specified field\r\n * @param {string} field\r\n * @return {Object | null} item  Item containing max value, or null if no items\r\n */\r\nDataSet.prototype.min = function (field) {\r\n  var data = this._data,\r\n      itemIds = Object.keys(data),\r\n      min = null,\r\n      minField = null,\r\n      i,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var itemField = item[field];\r\n    if (itemField != null && (!min || itemField < minField)) {\r\n      min = item;\r\n      minField = itemField;\r\n    }\r\n  }\r\n\r\n  return min;\r\n};\r\n\r\n/**\r\n * Find all distinct values of a specified field\r\n * @param {string} field\r\n * @return {Array} values  Array containing all distinct values. If data items\r\n *                         do not contain the specified field are ignored.\r\n *                         The returned array is unordered.\r\n */\r\nDataSet.prototype.distinct = function (field) {\r\n  var data = this._data;\r\n  var itemIds = Object.keys(data);\r\n  var values = [];\r\n  var fieldType = this._options.type && this._options.type[field] || null;\r\n  var count = 0;\r\n  var i,\r\n      j,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var value = item[field];\r\n    var exists = false;\r\n    for (j = 0; j < count; j++) {\r\n      if (values[j] == value) {\r\n        exists = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!exists && (value !== undefined)) {\r\n      values[count] = value;\r\n      count++;\r\n    }\r\n  }\r\n\r\n  if (fieldType) {\r\n    for (i = 0, len = values.length; i < len; i++) {\r\n      values[i] = util.convert(values[i], fieldType);\r\n    }\r\n  }\r\n\r\n  return values;\r\n};\r\n\r\n/**\r\n * Add a single item. Will fail when an item with the same id already exists.\r\n * @param {Object} item\r\n * @return {string} id\r\n * @private\r\n */\r\nDataSet.prototype._addItem = function (item) {\r\n  var id = item[this._fieldId];\r\n\r\n  if (id != undefined) {\r\n    // check whether this id is already taken\r\n    if (this._data[id]) {\r\n      // item already exists\r\n      throw new Error('Cannot add item: item with id ' + id + ' already exists');\r\n    }\r\n  }\r\n  else {\r\n    // generate an id\r\n    id = util.randomUUID();\r\n    item[this._fieldId] = id;\r\n  }\r\n\r\n  var d = {},\r\n      fields = Object.keys(item),\r\n      i,\r\n      len;\r\n  for (i = 0, len = fields.length; i < len; i++) {\r\n    var field = fields[i];\r\n    var fieldType = this._type[field];  // type may be undefined\r\n    d[field] = util.convert(item[field], fieldType);\r\n  }\r\n  this._data[id] = d;\r\n  this.length++;\r\n\r\n  return id;\r\n};\r\n\r\n/**\r\n * Get an item. Fields can be converted to a specific type\r\n * @param {string} id\r\n * @param {Object.<string, string>} [types]  field types to convert\r\n * @return {Object | null} item\r\n * @private\r\n */\r\nDataSet.prototype._getItem = function (id, types) {\r\n  var field, value, i, len;\r\n\r\n  // get the item from the dataset\r\n  var raw = this._data[id];\r\n  if (!raw) {\r\n    return null;\r\n  }\r\n\r\n  // convert the items field types\r\n  var converted = {},\r\n      fields = Object.keys(raw);\r\n\r\n  if (types) {\r\n    for (i = 0, len = fields.length; i < len; i++) {\r\n      field = fields[i];\r\n      value = raw[field];\r\n      converted[field] = util.convert(value, types[field]);\r\n    }\r\n  }\r\n  else {\r\n    // no field types specified, no converting needed\r\n    for (i = 0, len = fields.length; i < len; i++) {\r\n      field = fields[i];\r\n      value = raw[field];\r\n      converted[field] = value;\r\n    }\r\n  }\r\n\r\n  if (!converted[this._fieldId]) {\r\n    converted[this._fieldId] = raw.id;\r\n  }\r\n\r\n  return converted;\r\n};\r\n\r\n/**\r\n * Update a single item: merge with existing item.\r\n * Will fail when the item has no id, or when there does not exist an item\r\n * with the same id.\r\n * @param {Object} item\r\n * @return {string} id\r\n * @private\r\n */\r\nDataSet.prototype._updateItem = function (item) {\r\n  var id = item[this._fieldId];\r\n  if (id == undefined) {\r\n    throw new Error('Cannot update item: item has no id (item: ' + JSON.stringify(item) + ')');\r\n  }\r\n  var d = this._data[id];\r\n  if (!d) {\r\n    // item doesn't exist\r\n    throw new Error('Cannot update item: no item with id ' + id + ' found');\r\n  }\r\n\r\n  // merge with current item\r\n  var fields = Object.keys(item);\r\n  for (var i = 0, len = fields.length; i < len; i++) {\r\n    var field = fields[i];\r\n    var fieldType = this._type[field];  // type may be undefined\r\n    d[field] = util.convert(item[field], fieldType);\r\n  }\r\n\r\n  return id;\r\n};\r\n\r\nmodule.exports = DataSet;\r\n"},"lineCount":940}},"hash":"20b7e40d64c10241a77f895d296a08a0","cacheData":{"env":{}}}