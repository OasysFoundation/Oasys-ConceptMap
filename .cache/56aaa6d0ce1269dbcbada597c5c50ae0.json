{"dependencies":[{"name":"/Users/markus/Documents/Coding/visGraph/package.json","includedInParent":true,"mtime":1526573007000},{"name":"/Users/markus/Documents/Coding/visGraph/node_modules/vis/package.json","includedInParent":true,"mtime":1526562716000},{"name":"/Users/markus/Documents/Coding/visGraph/node_modules/vis/.babelrc","includedInParent":true,"mtime":1499028059000}],"generated":{"js":"/**\r\n *\r\n * @param {json} gephiJSON\r\n * @param {obj} optionsObj\r\n * @returns {{nodes: Array, edges: Array}}\r\n */\r\nfunction parseGephi(gephiJSON, optionsObj) {\r\n  var edges = [];\r\n  var nodes = [];\r\n  var options = {\r\n    edges: {\r\n      inheritColor: false\r\n    },\r\n    nodes: {\r\n      fixed: false,\r\n      parseColor: false\r\n    }\r\n  };\r\n\r\n  if (optionsObj !== undefined) {\r\n    if (optionsObj.fixed !== undefined)        {options.nodes.fixed = optionsObj.fixed}\r\n    if (optionsObj.parseColor !== undefined)   {options.nodes.parseColor = optionsObj.parseColor}\r\n    if (optionsObj.inheritColor !== undefined) {options.edges.inheritColor = optionsObj.inheritColor}\r\n  }\r\n\r\n  var gEdges = gephiJSON.edges;\r\n  var gNodes = gephiJSON.nodes;\r\n  for (var i = 0; i < gEdges.length; i++) {\r\n    var edge = {};\r\n    var gEdge = gEdges[i];\r\n    edge['id'] = gEdge.id;\r\n    edge['from'] = gEdge.source;\r\n    edge['to'] = gEdge.target;\r\n    edge['attributes'] = gEdge.attributes;\r\n    edge['label'] = gEdge.label;\r\n    edge['title'] = gEdge.attributes !== undefined ? gEdge.attributes.title : undefined;\r\n    if (gEdge['type'] === 'Directed') {\r\n      edge['arrows'] = 'to';\r\n    }\r\n//    edge['value'] = gEdge.attributes !== undefined ? gEdge.attributes.Weight : undefined;\r\n//    edge['width'] = edge['value'] !== undefined ? undefined : edgegEdge.size;\r\n    if (gEdge.color && options.inheritColor === false) {\r\n      edge['color'] = gEdge.color;\r\n    }\r\n    edges.push(edge);\r\n  }\r\n\r\n  for (var j = 0; j < gNodes.length; j++) {\r\n    var node = {};\r\n    var gNode = gNodes[j];\r\n    node['id'] = gNode.id;\r\n    node['attributes'] = gNode.attributes;\r\n    node['x'] = gNode.x;\r\n    node['y'] = gNode.y;\r\n    node['label'] = gNode.label;\r\n    node['title'] = gNode.attributes !== undefined ? gNode.attributes.title : gNode.title;\r\n    if (options.nodes.parseColor === true) {\r\n      node['color'] = gNode.color;\r\n    }\r\n    else {\r\n      node['color'] = gNode.color !== undefined ? {background:gNode.color, border:gNode.color, highlight: {background:gNode.color, border:gNode.color}, hover:{background:gNode.color, border:gNode.color}} : undefined;\r\n    }\r\n    node['size'] = gNode.size;\r\n    node['fixed'] = options.nodes.fixed && gNode.x !== undefined && gNode.y !== undefined;\r\n    nodes.push(node);\r\n  }\r\n\r\n  return {nodes:nodes, edges:edges};\r\n}\r\n\r\nexports.parseGephi = parseGephi;\r\n","map":{"mappings":[{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vis/lib/network/gephiParser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"node_modules/vis/lib/network/gephiParser.js":"/**\r\n *\r\n * @param {json} gephiJSON\r\n * @param {obj} optionsObj\r\n * @returns {{nodes: Array, edges: Array}}\r\n */\r\nfunction parseGephi(gephiJSON, optionsObj) {\r\n  var edges = [];\r\n  var nodes = [];\r\n  var options = {\r\n    edges: {\r\n      inheritColor: false\r\n    },\r\n    nodes: {\r\n      fixed: false,\r\n      parseColor: false\r\n    }\r\n  };\r\n\r\n  if (optionsObj !== undefined) {\r\n    if (optionsObj.fixed !== undefined)        {options.nodes.fixed = optionsObj.fixed}\r\n    if (optionsObj.parseColor !== undefined)   {options.nodes.parseColor = optionsObj.parseColor}\r\n    if (optionsObj.inheritColor !== undefined) {options.edges.inheritColor = optionsObj.inheritColor}\r\n  }\r\n\r\n  var gEdges = gephiJSON.edges;\r\n  var gNodes = gephiJSON.nodes;\r\n  for (var i = 0; i < gEdges.length; i++) {\r\n    var edge = {};\r\n    var gEdge = gEdges[i];\r\n    edge['id'] = gEdge.id;\r\n    edge['from'] = gEdge.source;\r\n    edge['to'] = gEdge.target;\r\n    edge['attributes'] = gEdge.attributes;\r\n    edge['label'] = gEdge.label;\r\n    edge['title'] = gEdge.attributes !== undefined ? gEdge.attributes.title : undefined;\r\n    if (gEdge['type'] === 'Directed') {\r\n      edge['arrows'] = 'to';\r\n    }\r\n//    edge['value'] = gEdge.attributes !== undefined ? gEdge.attributes.Weight : undefined;\r\n//    edge['width'] = edge['value'] !== undefined ? undefined : edgegEdge.size;\r\n    if (gEdge.color && options.inheritColor === false) {\r\n      edge['color'] = gEdge.color;\r\n    }\r\n    edges.push(edge);\r\n  }\r\n\r\n  for (var j = 0; j < gNodes.length; j++) {\r\n    var node = {};\r\n    var gNode = gNodes[j];\r\n    node['id'] = gNode.id;\r\n    node['attributes'] = gNode.attributes;\r\n    node['x'] = gNode.x;\r\n    node['y'] = gNode.y;\r\n    node['label'] = gNode.label;\r\n    node['title'] = gNode.attributes !== undefined ? gNode.attributes.title : gNode.title;\r\n    if (options.nodes.parseColor === true) {\r\n      node['color'] = gNode.color;\r\n    }\r\n    else {\r\n      node['color'] = gNode.color !== undefined ? {background:gNode.color, border:gNode.color, highlight: {background:gNode.color, border:gNode.color}, hover:{background:gNode.color, border:gNode.color}} : undefined;\r\n    }\r\n    node['size'] = gNode.size;\r\n    node['fixed'] = options.nodes.fixed && gNode.x !== undefined && gNode.y !== undefined;\r\n    nodes.push(node);\r\n  }\r\n\r\n  return {nodes:nodes, edges:edges};\r\n}\r\n\r\nexports.parseGephi = parseGephi;\r\n"},"lineCount":72}},"hash":"eb0e382e48af05a0398c37fdee484862","cacheData":{"env":{}}}