{"dependencies":[{"name":"/Users/markus/Documents/Coding/visGraph/package.json","includedInParent":true,"mtime":1526573007000},{"name":"/Users/markus/Documents/Coding/visGraph/node_modules/vis/package.json","includedInParent":true,"mtime":1526562716000},{"name":"/Users/markus/Documents/Coding/visGraph/node_modules/vis/.babelrc","includedInParent":true,"mtime":1499028059000},{"name":"./shapes","loc":{"line":2,"column":8}},{"name":"emitter-component","loc":{"line":4,"column":22}},{"name":"../util","loc":{"line":5,"column":19}},{"name":"./dotparser","loc":{"line":6,"column":24}},{"name":"./gephiParser","loc":{"line":7,"column":26}},{"name":"../shared/Activator","loc":{"line":8,"column":24}},{"name":"./locales","loc":{"line":9,"column":22}},{"name":"./Images","loc":{"line":11,"column":21}},{"name":"./modules/Groups","loc":{"line":12,"column":21}},{"name":"./modules/NodesHandler","loc":{"line":13,"column":27}},{"name":"./modules/EdgesHandler","loc":{"line":14,"column":27}},{"name":"./modules/PhysicsEngine","loc":{"line":15,"column":28}},{"name":"./modules/Clustering","loc":{"line":16,"column":28}},{"name":"./modules/CanvasRenderer","loc":{"line":17,"column":29}},{"name":"./modules/Canvas","loc":{"line":18,"column":21}},{"name":"./modules/View","loc":{"line":19,"column":19}},{"name":"./modules/InteractionHandler","loc":{"line":20,"column":33}},{"name":"./modules/SelectionHandler","loc":{"line":21,"column":31}},{"name":"./modules/LayoutEngine","loc":{"line":22,"column":27}},{"name":"./modules/ManipulationSystem","loc":{"line":23,"column":33}},{"name":"./../shared/Configurator","loc":{"line":24,"column":27}},{"name":"./../shared/Validator","loc":{"line":26,"column":27}},{"name":"./options.js","loc":{"line":27,"column":45}},{"name":"./modules/KamadaKawai.js","loc":{"line":28,"column":26}}],"generated":{"js":"// Load custom shapes into CanvasRenderingContext2D\r\nrequire('./shapes');\r\n\r\nlet Emitter = require('emitter-component');\r\nlet util = require('../util');\r\nlet dotparser = require('./dotparser');\r\nlet gephiParser = require('./gephiParser');\r\nlet Activator = require('../shared/Activator');\r\nlet locales = require('./locales');\r\n\r\nvar Images = require('./Images').default;\r\nvar Groups = require('./modules/Groups').default;\r\nvar NodesHandler = require('./modules/NodesHandler').default;\r\nvar EdgesHandler = require('./modules/EdgesHandler').default;\r\nvar PhysicsEngine = require('./modules/PhysicsEngine').default;\r\nvar ClusterEngine = require('./modules/Clustering').default;\r\nvar CanvasRenderer = require('./modules/CanvasRenderer').default;\r\nvar Canvas = require('./modules/Canvas').default;\r\nvar View = require('./modules/View').default;\r\nvar InteractionHandler = require('./modules/InteractionHandler').default;\r\nvar SelectionHandler = require(\"./modules/SelectionHandler\").default;\r\nvar LayoutEngine = require(\"./modules/LayoutEngine\").default;\r\nvar ManipulationSystem = require(\"./modules/ManipulationSystem\").default;\r\nvar Configurator = require(\"./../shared/Configurator\").default;\r\nvar Validator = require(\"./../shared/Validator\").default;\r\nvar {printStyle} = require('./../shared/Validator');\r\nvar {allOptions, configureOptions} = require('./options.js');\r\nvar KamadaKawai = require(\"./modules/KamadaKawai.js\").default;\r\n\r\n\r\n/**\r\n * Create a network visualization, displaying nodes and edges.\r\n *\r\n * @param {Element} container   The DOM element in which the Network will\r\n *                                  be created. Normally a div element.\r\n * @param {Object} data         An object containing parameters\r\n *                              {Array} nodes\r\n *                              {Array} edges\r\n * @param {Object} options      Options\r\n * @constructor Network\r\n */\r\nfunction Network(container, data, options) {\r\n  if (!(this instanceof Network)) {\r\n    throw new SyntaxError('Constructor must be called with the new operator');\r\n  }\r\n\r\n  // set constant values\r\n  this.options = {};\r\n  this.defaultOptions = {\r\n    locale: 'en',\r\n    locales: locales,\r\n    clickToUse: false\r\n  };\r\n  util.extend(this.options, this.defaultOptions);\r\n\r\n  /**\r\n   * Containers for nodes and edges.\r\n   *\r\n   * 'edges' and 'nodes' contain the full definitions of all the network elements.\r\n   * 'nodeIndices' and 'edgeIndices' contain the id's of the active elements.\r\n   *\r\n   * The distinction is important, because a defined node need not be active, i.e.\r\n   * visible on the canvas. This happens in particular when clusters are defined, in\r\n   * that case there will be nodes and edges not displayed.\r\n   * The bottom line is that all code with actions related to visibility, *must* use\r\n   * 'nodeIndices' and 'edgeIndices', not 'nodes' and 'edges' directly.\r\n   */\r\n  this.body = {\r\n    container: container,\r\n\r\n    // See comment above for following fields\r\n    nodes: {},\r\n    nodeIndices: [],\r\n    edges: {},\r\n    edgeIndices: [],\r\n\r\n    emitter: {\r\n      on:   this.on.bind(this),\r\n      off:  this.off.bind(this),\r\n      emit: this.emit.bind(this),\r\n      once: this.once.bind(this)\r\n    },\r\n    eventListeners: {\r\n      onTap:        function() {},\r\n      onTouch:      function() {},\r\n      onDoubleTap:  function() {},\r\n      onHold:       function() {},\r\n      onDragStart:  function() {},\r\n      onDrag:       function() {},\r\n      onDragEnd:    function() {},\r\n      onMouseWheel: function() {},\r\n      onPinch:      function() {},\r\n      onMouseMove:  function() {},\r\n      onRelease:    function() {},\r\n      onContext:    function() {}\r\n    },\r\n    data: {\r\n      nodes: null,      // A DataSet or DataView\r\n      edges: null       // A DataSet or DataView\r\n    },\r\n    functions: {\r\n      createNode: function() {},\r\n      createEdge: function() {},\r\n      getPointer: function() {}\r\n    },\r\n    modules: {},\r\n    view: {\r\n      scale: 1,\r\n      translation: {x: 0, y: 0}\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // bind the event listeners\r\n  this.bindEventListeners();\r\n\r\n  // setting up all modules\r\n  this.images              = new Images(() => this.body.emitter.emit(\"_requestRedraw\")); // object with images\r\n  this.groups              = new Groups(); // object with groups\r\n  this.canvas              = new Canvas(this.body);                         // DOM handler\r\n  this.selectionHandler    = new SelectionHandler(this.body, this.canvas);  // Selection handler\r\n  this.interactionHandler  = new InteractionHandler(this.body, this.canvas, this.selectionHandler);  // Interaction handler handles all the hammer bindings (that are bound by canvas), key\r\n  this.view                = new View(this.body, this.canvas);              // camera handler, does animations and zooms\r\n  this.renderer            = new CanvasRenderer(this.body, this.canvas);    // renderer, starts renderloop, has events that modules can hook into\r\n  this.physics             = new PhysicsEngine(this.body);                  // physics engine, does all the simulations\r\n  this.layoutEngine        = new LayoutEngine(this.body);                   // layout engine for inital layout and hierarchical layout\r\n  this.clustering          = new ClusterEngine(this.body);                  // clustering api\r\n  this.manipulation        = new ManipulationSystem(this.body, this.canvas, this.selectionHandler); // data manipulation system\r\n\r\n  this.nodesHandler        = new NodesHandler(this.body, this.images, this.groups, this.layoutEngine);   // Handle adding, deleting and updating of nodes as well as global options\r\n  this.edgesHandler        = new EdgesHandler(this.body, this.images, this.groups);   // Handle adding, deleting and updating of edges as well as global options\r\n\r\n  this.body.modules[\"kamadaKawai\"] = new KamadaKawai(this.body,150,0.05);   // Layouting algorithm.\r\n  this.body.modules[\"clustering\"] = this.clustering;\r\n\r\n  // create the DOM elements\r\n  this.canvas._create();\r\n\r\n  // apply options\r\n  this.setOptions(options);\r\n\r\n  // load data (the disable start variable will be the same as the enabled clustering)\r\n  this.setData(data);\r\n\r\n}\r\n\r\n// Extend Network with an Emitter mixin\r\nEmitter(Network.prototype);\r\n\r\n\r\n/**\r\n * Set options\r\n * @param {Object} options\r\n */\r\nNetwork.prototype.setOptions = function (options) {\r\n  if (options !== undefined) {\r\n    let errorFound = Validator.validate(options, allOptions);\r\n    if (errorFound === true) {\r\n      console.log('%cErrors have been found in the supplied options object.', printStyle);\r\n    }\r\n\r\n    // copy the global fields over\r\n    let fields = ['locale','locales','clickToUse'];\r\n    util.selectiveDeepExtend(fields,this.options, options);\r\n\r\n    // the hierarchical system can adapt the edges and the physics to it's own options because not all combinations work with the hierarichical system.\r\n    options = this.layoutEngine.setOptions(options.layout, options);\r\n\r\n    this.canvas.setOptions(options); // options for canvas are in globals\r\n\r\n    // pass the options to the modules\r\n    this.groups.setOptions(options.groups);\r\n    this.nodesHandler.setOptions(options.nodes);\r\n    this.edgesHandler.setOptions(options.edges);\r\n    this.physics.setOptions(options.physics);\r\n    this.manipulation.setOptions(options.manipulation, options, this.options); // manipulation uses the locales in the globals\r\n\r\n    this.interactionHandler.setOptions(options.interaction);\r\n    this.renderer.setOptions(options.interaction);            // options for rendering are in interaction\r\n    this.selectionHandler.setOptions(options.interaction);    // options for selection are in interaction\r\n\r\n    // reload the settings of the nodes to apply changes in groups that are not referenced by pointer.\r\n    if (options.groups !== undefined) {\r\n      this.body.emitter.emit(\"refreshNodes\");\r\n    }\r\n    // these two do not have options at the moment, here for completeness\r\n    //this.view.setOptions(options.view);\r\n    //this.clustering.setOptions(options.clustering);\r\n\r\n    if ('configure' in options) {\r\n      if (!this.configurator) {\r\n        this.configurator = new Configurator(this, this.body.container, configureOptions, this.canvas.pixelRatio);\r\n      }\r\n\r\n      this.configurator.setOptions(options.configure);\r\n    }\r\n\r\n    // if the configuration system is enabled, copy all options and put them into the config system\r\n    if (this.configurator && this.configurator.options.enabled === true) {\r\n      let networkOptions = {nodes:{},edges:{},layout:{},interaction:{},manipulation:{},physics:{},global:{}};\r\n      util.deepExtend(networkOptions.nodes,        this.nodesHandler.options);\r\n      util.deepExtend(networkOptions.edges,        this.edgesHandler.options);\r\n      util.deepExtend(networkOptions.layout,       this.layoutEngine.options);\r\n      // load the selectionHandler and render default options in to the interaction group\r\n      util.deepExtend(networkOptions.interaction,  this.selectionHandler.options);\r\n      util.deepExtend(networkOptions.interaction,  this.renderer.options);\r\n\r\n      util.deepExtend(networkOptions.interaction,  this.interactionHandler.options);\r\n      util.deepExtend(networkOptions.manipulation, this.manipulation.options);\r\n      util.deepExtend(networkOptions.physics,      this.physics.options);\r\n\r\n      // load globals into the global object\r\n      util.deepExtend(networkOptions.global,       this.canvas.options);\r\n      util.deepExtend(networkOptions.global,       this.options);\r\n\r\n      this.configurator.setModuleOptions(networkOptions);\r\n    }\r\n\r\n    // handle network global options\r\n    if (options.clickToUse !== undefined) {\r\n      if (options.clickToUse === true) {\r\n        if (this.activator === undefined) {\r\n          this.activator = new Activator(this.canvas.frame);\r\n          this.activator.on('change', () => {this.body.emitter.emit(\"activate\")});\r\n        }\r\n      }\r\n      else {\r\n        if (this.activator !== undefined) {\r\n          this.activator.destroy();\r\n          delete this.activator;\r\n        }\r\n        this.body.emitter.emit(\"activate\");\r\n      }\r\n    }\r\n    else {\r\n      this.body.emitter.emit(\"activate\");\r\n    }\r\n\r\n    this.canvas.setSize();\r\n    // start the physics simulation. Can be safely called multiple times.\r\n    this.body.emitter.emit(\"startSimulation\");\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Update the visible nodes and edges list with the most recent node state.\r\n *\r\n * Visible nodes are stored in this.body.nodeIndices.\r\n * Visible edges are stored in this.body.edgeIndices.\r\n * A node or edges is visible if it is not hidden or clustered.\r\n *\r\n * @private\r\n */\r\nNetwork.prototype._updateVisibleIndices = function () {\r\n  let nodes = this.body.nodes;\r\n  let edges = this.body.edges;\r\n  this.body.nodeIndices = [];\r\n  this.body.edgeIndices = [];\r\n\r\n  for (let nodeId in nodes) {\r\n    if (nodes.hasOwnProperty(nodeId)) {\r\n      if (!this.clustering._isClusteredNode(nodeId) && nodes[nodeId].options.hidden === false) {\r\n        this.body.nodeIndices.push(nodes[nodeId].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let edgeId in edges) {\r\n    if (edges.hasOwnProperty(edgeId)) {\r\n      let edge = edges[edgeId];\r\n\r\n      // It can happen that this is executed *after* a node edge has been removed,\r\n      // but *before* the edge itself has been removed. Taking this into account.\r\n      let fromNode = nodes[edge.fromId];\r\n      let toNode   = nodes[edge.toId];\r\n      let edgeNodesPresent = (fromNode !== undefined) && (toNode !== undefined);\r\n\r\n      let isVisible =\r\n          !this.clustering._isClusteredEdge(edgeId)\r\n        && edge.options.hidden === false\r\n        && edgeNodesPresent\r\n        && fromNode.options.hidden === false  // Also hidden if any of its connecting nodes are hidden\r\n        && toNode.options.hidden === false;   // idem\r\n\r\n      if (isVisible) {\r\n        this.body.edgeIndices.push(edge.id);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Bind all events\r\n */\r\nNetwork.prototype.bindEventListeners = function () {\r\n  // This event will trigger a rebuilding of the cache everything.\r\n  // Used when nodes or edges have been added or removed.\r\n  this.body.emitter.on(\"_dataChanged\", () => {\r\n    this.edgesHandler._updateState();\r\n    this.body.emitter.emit(\"_dataUpdated\");\r\n  });\r\n\r\n  // this is called when options of EXISTING nodes or edges have changed.\r\n  this.body.emitter.on(\"_dataUpdated\", () => {\r\n    // Order important in following block\r\n    this.clustering._updateState();\r\n    this._updateVisibleIndices();\r\n\r\n    this._updateValueRange(this.body.nodes);\r\n    this._updateValueRange(this.body.edges);\r\n    // start simulation (can be called safely, even if already running)\r\n    this.body.emitter.emit(\"startSimulation\");\r\n    this.body.emitter.emit(\"_requestRedraw\");\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Set nodes and edges, and optionally options as well.\r\n *\r\n * @param {Object} data              Object containing parameters:\r\n *                                   {Array | DataSet | DataView} [nodes] Array with nodes\r\n *                                   {Array | DataSet | DataView} [edges] Array with edges\r\n *                                   {String} [dot] String containing data in DOT format\r\n *                                   {String} [gephi] String containing data in gephi JSON format\r\n *                                   {Options} [options] Object with options\r\n */\r\nNetwork.prototype.setData = function (data) {\r\n  // reset the physics engine.\r\n  this.body.emitter.emit(\"resetPhysics\");\r\n  this.body.emitter.emit(\"_resetData\");\r\n\r\n  // unselect all to ensure no selections from old data are carried over.\r\n  this.selectionHandler.unselectAll();\r\n\r\n  if (data && data.dot && (data.nodes || data.edges)) {\r\n    throw new SyntaxError('Data must contain either parameter \"dot\" or ' +\r\n      ' parameter pair \"nodes\" and \"edges\", but not both.');\r\n  }\r\n\r\n  // set options\r\n  this.setOptions(data && data.options);\r\n  // set all data\r\n  if (data && data.dot) {\r\n    console.log('The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);');\r\n    // parse DOT file\r\n    var dotData = dotparser.DOTToGraph(data.dot);\r\n    this.setData(dotData);\r\n    return;\r\n  }\r\n  else if (data && data.gephi) {\r\n    // parse DOT file\r\n    console.log('The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);');\r\n    var gephiData = gephiParser.parseGephi(data.gephi);\r\n    this.setData(gephiData);\r\n    return;\r\n  }\r\n  else {\r\n    this.nodesHandler.setData(data && data.nodes, true);\r\n    this.edgesHandler.setData(data && data.edges, true);\r\n  }\r\n\r\n  // emit change in data\r\n  this.body.emitter.emit(\"_dataChanged\");\r\n\r\n  // emit data loaded\r\n  this.body.emitter.emit(\"_dataLoaded\");\r\n\r\n  // find a stable position or start animating to a stable position\r\n  this.body.emitter.emit(\"initPhysics\");\r\n};\r\n\r\n\r\n/**\r\n * Cleans up all bindings of the network, removing it fully from the memory IF the variable is set to null after calling this function.\r\n * var network = new vis.Network(..);\r\n * network.destroy();\r\n * network = null;\r\n */\r\nNetwork.prototype.destroy = function () {\r\n  this.body.emitter.emit(\"destroy\");\r\n  // clear events\r\n  this.body.emitter.off();\r\n  this.off();\r\n\r\n  // delete modules\r\n  delete this.groups;\r\n  delete this.canvas;\r\n  delete this.selectionHandler;\r\n  delete this.interactionHandler;\r\n  delete this.view;\r\n  delete this.renderer;\r\n  delete this.physics;\r\n  delete this.layoutEngine;\r\n  delete this.clustering;\r\n  delete this.manipulation;\r\n  delete this.nodesHandler;\r\n  delete this.edgesHandler;\r\n  delete this.configurator;\r\n  delete this.images;\r\n\r\n  for (var nodeId in this.body.nodes) {\r\n    if (!this.body.nodes.hasOwnProperty(nodeId)) continue;\r\n    delete this.body.nodes[nodeId];\r\n  }\r\n\r\n  for (var edgeId in this.body.edges) {\r\n    if (!this.body.edges.hasOwnProperty(edgeId)) continue;\r\n    delete this.body.edges[edgeId];\r\n  }\r\n\r\n  // remove the container and everything inside it recursively\r\n  util.recursiveDOMDelete(this.body.container);\r\n};\r\n\r\n\r\n/**\r\n * Update the values of all object in the given array according to the current\r\n * value range of the objects in the array.\r\n * @param {Object} obj    An object containing a set of Edges or Nodes\r\n *                        The objects must have a method getValue() and\r\n *                        setValueRange(min, max).\r\n * @private\r\n */\r\nNetwork.prototype._updateValueRange = function (obj) {\r\n  var id;\r\n\r\n  // determine the range of the objects\r\n  var valueMin = undefined;\r\n  var valueMax = undefined;\r\n  var valueTotal = 0;\r\n  for (id in obj) {\r\n    if (obj.hasOwnProperty(id)) {\r\n      var value = obj[id].getValue();\r\n      if (value !== undefined) {\r\n        valueMin = (valueMin === undefined) ? value : Math.min(value, valueMin);\r\n        valueMax = (valueMax === undefined) ? value : Math.max(value, valueMax);\r\n        valueTotal += value;\r\n      }\r\n    }\r\n  }\r\n\r\n  // adjust the range of all objects\r\n  if (valueMin !== undefined && valueMax !== undefined) {\r\n    for (id in obj) {\r\n      if (obj.hasOwnProperty(id)) {\r\n        obj[id].setValueRange(valueMin, valueMax, valueTotal);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Returns true when the Network is active.\r\n * @returns {boolean}\r\n */\r\nNetwork.prototype.isActive = function () {\r\n  return !this.activator || this.activator.active;\r\n};\r\n\r\n\r\nNetwork.prototype.setSize             = function() {return this.canvas.setSize.apply(this.canvas,arguments);};\r\nNetwork.prototype.canvasToDOM         = function() {return this.canvas.canvasToDOM.apply(this.canvas,arguments);};\r\nNetwork.prototype.DOMtoCanvas         = function() {return this.canvas.DOMtoCanvas.apply(this.canvas,arguments);};\r\nNetwork.prototype.findNode            = function() {return this.clustering.findNode.apply(this.clustering,arguments);};\r\nNetwork.prototype.isCluster           = function() {return this.clustering.isCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.openCluster         = function() {return this.clustering.openCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.cluster             = function() {return this.clustering.cluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.getNodesInCluster   = function() {return this.clustering.getNodesInCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterByConnection = function() {return this.clustering.clusterByConnection.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterByHubsize    = function() {return this.clustering.clusterByHubsize.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterOutliers     = function() {return this.clustering.clusterOutliers.apply(this.clustering,arguments);};\r\nNetwork.prototype.getSeed             = function() {return this.layoutEngine.getSeed.apply(this.layoutEngine,arguments);};\r\nNetwork.prototype.enableEditMode      = function() {return this.manipulation.enableEditMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.disableEditMode     = function() {return this.manipulation.disableEditMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.addNodeMode         = function() {return this.manipulation.addNodeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editNode            = function() {return this.manipulation.editNode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editNodeMode        = function() {console.log(\"Deprecated: Please use editNode instead of editNodeMode.\"); return this.manipulation.editNode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.addEdgeMode         = function() {return this.manipulation.addEdgeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editEdgeMode        = function() {return this.manipulation.editEdgeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.deleteSelected      = function() {return this.manipulation.deleteSelected.apply(this.manipulation,arguments);};\r\nNetwork.prototype.getPositions        = function() {return this.nodesHandler.getPositions.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.storePositions      = function() {return this.nodesHandler.storePositions.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.moveNode            = function() {return this.nodesHandler.moveNode.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.getBoundingBox      = function() {return this.nodesHandler.getBoundingBox.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.getConnectedNodes   = function(objectId) {\r\n  if (this.body.nodes[objectId] !== undefined) {\r\n    return this.nodesHandler.getConnectedNodes.apply(this.nodesHandler,arguments);\r\n  }\r\n  else {\r\n    return this.edgesHandler.getConnectedNodes.apply(this.edgesHandler,arguments);\r\n  }\r\n};\r\nNetwork.prototype.getConnectedEdges   = function() {return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.startSimulation     = function() {return this.physics.startSimulation.apply(this.physics,arguments);};\r\nNetwork.prototype.stopSimulation      = function() {return this.physics.stopSimulation.apply(this.physics,arguments);};\r\nNetwork.prototype.stabilize           = function() {return this.physics.stabilize.apply(this.physics,arguments);};\r\nNetwork.prototype.getSelection        = function() {return this.selectionHandler.getSelection.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.setSelection        = function() {return this.selectionHandler.setSelection.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getSelectedNodes    = function() {return this.selectionHandler.getSelectedNodes.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getSelectedEdges    = function() {return this.selectionHandler.getSelectedEdges.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getNodeAt           = function() {\r\n  var node = this.selectionHandler.getNodeAt.apply(this.selectionHandler,arguments);\r\n  if (node !== undefined && node.id !== undefined) {\r\n    return node.id;\r\n  }\r\n  return node;\r\n};\r\nNetwork.prototype.getEdgeAt           = function() {\r\n    var edge = this.selectionHandler.getEdgeAt.apply(this.selectionHandler,arguments);\r\n    if (edge !== undefined && edge.id !== undefined) {\r\n      return edge.id;\r\n    }\r\n    return edge;\r\n  };\r\nNetwork.prototype.selectNodes         = function() {return this.selectionHandler.selectNodes.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.selectEdges         = function() {return this.selectionHandler.selectEdges.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.unselectAll         = function() {\r\n  this.selectionHandler.unselectAll.apply(this.selectionHandler,arguments);\r\n  this.redraw();\r\n};\r\nNetwork.prototype.redraw              = function() {return this.renderer.redraw.apply(this.renderer,arguments);};\r\nNetwork.prototype.getScale            = function() {return this.view.getScale.apply(this.view,arguments);};\r\nNetwork.prototype.getViewPosition     = function() {return this.view.getViewPosition.apply(this.view,arguments);};\r\nNetwork.prototype.fit                 = function() {return this.view.fit.apply(this.view,arguments);};\r\nNetwork.prototype.moveTo              = function() {return this.view.moveTo.apply(this.view,arguments);};\r\nNetwork.prototype.focus               = function() {return this.view.focus.apply(this.view,arguments);};\r\nNetwork.prototype.releaseNode         = function() {return this.view.releaseNode.apply(this.view,arguments);};\r\nNetwork.prototype.getOptionsFromConfigurator = function() {\r\n  let options = {};\r\n  if (this.configurator) {\r\n    options = this.configurator.getOptions.apply(this.configurator);\r\n  }\r\n  return options;\r\n};\r\n\r\n\r\n\r\nmodule.exports = Network;\r\n","map":{"mappings":[{"source":"node_modules/vis/lib/network/Network.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/vis/lib/network/Network.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}}],"sources":{"node_modules/vis/lib/network/Network.js":"// Load custom shapes into CanvasRenderingContext2D\r\nrequire('./shapes');\r\n\r\nlet Emitter = require('emitter-component');\r\nlet util = require('../util');\r\nlet dotparser = require('./dotparser');\r\nlet gephiParser = require('./gephiParser');\r\nlet Activator = require('../shared/Activator');\r\nlet locales = require('./locales');\r\n\r\nvar Images = require('./Images').default;\r\nvar Groups = require('./modules/Groups').default;\r\nvar NodesHandler = require('./modules/NodesHandler').default;\r\nvar EdgesHandler = require('./modules/EdgesHandler').default;\r\nvar PhysicsEngine = require('./modules/PhysicsEngine').default;\r\nvar ClusterEngine = require('./modules/Clustering').default;\r\nvar CanvasRenderer = require('./modules/CanvasRenderer').default;\r\nvar Canvas = require('./modules/Canvas').default;\r\nvar View = require('./modules/View').default;\r\nvar InteractionHandler = require('./modules/InteractionHandler').default;\r\nvar SelectionHandler = require(\"./modules/SelectionHandler\").default;\r\nvar LayoutEngine = require(\"./modules/LayoutEngine\").default;\r\nvar ManipulationSystem = require(\"./modules/ManipulationSystem\").default;\r\nvar Configurator = require(\"./../shared/Configurator\").default;\r\nvar Validator = require(\"./../shared/Validator\").default;\r\nvar {printStyle} = require('./../shared/Validator');\r\nvar {allOptions, configureOptions} = require('./options.js');\r\nvar KamadaKawai = require(\"./modules/KamadaKawai.js\").default;\r\n\r\n\r\n/**\r\n * Create a network visualization, displaying nodes and edges.\r\n *\r\n * @param {Element} container   The DOM element in which the Network will\r\n *                                  be created. Normally a div element.\r\n * @param {Object} data         An object containing parameters\r\n *                              {Array} nodes\r\n *                              {Array} edges\r\n * @param {Object} options      Options\r\n * @constructor Network\r\n */\r\nfunction Network(container, data, options) {\r\n  if (!(this instanceof Network)) {\r\n    throw new SyntaxError('Constructor must be called with the new operator');\r\n  }\r\n\r\n  // set constant values\r\n  this.options = {};\r\n  this.defaultOptions = {\r\n    locale: 'en',\r\n    locales: locales,\r\n    clickToUse: false\r\n  };\r\n  util.extend(this.options, this.defaultOptions);\r\n\r\n  /**\r\n   * Containers for nodes and edges.\r\n   *\r\n   * 'edges' and 'nodes' contain the full definitions of all the network elements.\r\n   * 'nodeIndices' and 'edgeIndices' contain the id's of the active elements.\r\n   *\r\n   * The distinction is important, because a defined node need not be active, i.e.\r\n   * visible on the canvas. This happens in particular when clusters are defined, in\r\n   * that case there will be nodes and edges not displayed.\r\n   * The bottom line is that all code with actions related to visibility, *must* use\r\n   * 'nodeIndices' and 'edgeIndices', not 'nodes' and 'edges' directly.\r\n   */\r\n  this.body = {\r\n    container: container,\r\n\r\n    // See comment above for following fields\r\n    nodes: {},\r\n    nodeIndices: [],\r\n    edges: {},\r\n    edgeIndices: [],\r\n\r\n    emitter: {\r\n      on:   this.on.bind(this),\r\n      off:  this.off.bind(this),\r\n      emit: this.emit.bind(this),\r\n      once: this.once.bind(this)\r\n    },\r\n    eventListeners: {\r\n      onTap:        function() {},\r\n      onTouch:      function() {},\r\n      onDoubleTap:  function() {},\r\n      onHold:       function() {},\r\n      onDragStart:  function() {},\r\n      onDrag:       function() {},\r\n      onDragEnd:    function() {},\r\n      onMouseWheel: function() {},\r\n      onPinch:      function() {},\r\n      onMouseMove:  function() {},\r\n      onRelease:    function() {},\r\n      onContext:    function() {}\r\n    },\r\n    data: {\r\n      nodes: null,      // A DataSet or DataView\r\n      edges: null       // A DataSet or DataView\r\n    },\r\n    functions: {\r\n      createNode: function() {},\r\n      createEdge: function() {},\r\n      getPointer: function() {}\r\n    },\r\n    modules: {},\r\n    view: {\r\n      scale: 1,\r\n      translation: {x: 0, y: 0}\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // bind the event listeners\r\n  this.bindEventListeners();\r\n\r\n  // setting up all modules\r\n  this.images              = new Images(() => this.body.emitter.emit(\"_requestRedraw\")); // object with images\r\n  this.groups              = new Groups(); // object with groups\r\n  this.canvas              = new Canvas(this.body);                         // DOM handler\r\n  this.selectionHandler    = new SelectionHandler(this.body, this.canvas);  // Selection handler\r\n  this.interactionHandler  = new InteractionHandler(this.body, this.canvas, this.selectionHandler);  // Interaction handler handles all the hammer bindings (that are bound by canvas), key\r\n  this.view                = new View(this.body, this.canvas);              // camera handler, does animations and zooms\r\n  this.renderer            = new CanvasRenderer(this.body, this.canvas);    // renderer, starts renderloop, has events that modules can hook into\r\n  this.physics             = new PhysicsEngine(this.body);                  // physics engine, does all the simulations\r\n  this.layoutEngine        = new LayoutEngine(this.body);                   // layout engine for inital layout and hierarchical layout\r\n  this.clustering          = new ClusterEngine(this.body);                  // clustering api\r\n  this.manipulation        = new ManipulationSystem(this.body, this.canvas, this.selectionHandler); // data manipulation system\r\n\r\n  this.nodesHandler        = new NodesHandler(this.body, this.images, this.groups, this.layoutEngine);   // Handle adding, deleting and updating of nodes as well as global options\r\n  this.edgesHandler        = new EdgesHandler(this.body, this.images, this.groups);   // Handle adding, deleting and updating of edges as well as global options\r\n\r\n  this.body.modules[\"kamadaKawai\"] = new KamadaKawai(this.body,150,0.05);   // Layouting algorithm.\r\n  this.body.modules[\"clustering\"] = this.clustering;\r\n\r\n  // create the DOM elements\r\n  this.canvas._create();\r\n\r\n  // apply options\r\n  this.setOptions(options);\r\n\r\n  // load data (the disable start variable will be the same as the enabled clustering)\r\n  this.setData(data);\r\n\r\n}\r\n\r\n// Extend Network with an Emitter mixin\r\nEmitter(Network.prototype);\r\n\r\n\r\n/**\r\n * Set options\r\n * @param {Object} options\r\n */\r\nNetwork.prototype.setOptions = function (options) {\r\n  if (options !== undefined) {\r\n    let errorFound = Validator.validate(options, allOptions);\r\n    if (errorFound === true) {\r\n      console.log('%cErrors have been found in the supplied options object.', printStyle);\r\n    }\r\n\r\n    // copy the global fields over\r\n    let fields = ['locale','locales','clickToUse'];\r\n    util.selectiveDeepExtend(fields,this.options, options);\r\n\r\n    // the hierarchical system can adapt the edges and the physics to it's own options because not all combinations work with the hierarichical system.\r\n    options = this.layoutEngine.setOptions(options.layout, options);\r\n\r\n    this.canvas.setOptions(options); // options for canvas are in globals\r\n\r\n    // pass the options to the modules\r\n    this.groups.setOptions(options.groups);\r\n    this.nodesHandler.setOptions(options.nodes);\r\n    this.edgesHandler.setOptions(options.edges);\r\n    this.physics.setOptions(options.physics);\r\n    this.manipulation.setOptions(options.manipulation, options, this.options); // manipulation uses the locales in the globals\r\n\r\n    this.interactionHandler.setOptions(options.interaction);\r\n    this.renderer.setOptions(options.interaction);            // options for rendering are in interaction\r\n    this.selectionHandler.setOptions(options.interaction);    // options for selection are in interaction\r\n\r\n    // reload the settings of the nodes to apply changes in groups that are not referenced by pointer.\r\n    if (options.groups !== undefined) {\r\n      this.body.emitter.emit(\"refreshNodes\");\r\n    }\r\n    // these two do not have options at the moment, here for completeness\r\n    //this.view.setOptions(options.view);\r\n    //this.clustering.setOptions(options.clustering);\r\n\r\n    if ('configure' in options) {\r\n      if (!this.configurator) {\r\n        this.configurator = new Configurator(this, this.body.container, configureOptions, this.canvas.pixelRatio);\r\n      }\r\n\r\n      this.configurator.setOptions(options.configure);\r\n    }\r\n\r\n    // if the configuration system is enabled, copy all options and put them into the config system\r\n    if (this.configurator && this.configurator.options.enabled === true) {\r\n      let networkOptions = {nodes:{},edges:{},layout:{},interaction:{},manipulation:{},physics:{},global:{}};\r\n      util.deepExtend(networkOptions.nodes,        this.nodesHandler.options);\r\n      util.deepExtend(networkOptions.edges,        this.edgesHandler.options);\r\n      util.deepExtend(networkOptions.layout,       this.layoutEngine.options);\r\n      // load the selectionHandler and render default options in to the interaction group\r\n      util.deepExtend(networkOptions.interaction,  this.selectionHandler.options);\r\n      util.deepExtend(networkOptions.interaction,  this.renderer.options);\r\n\r\n      util.deepExtend(networkOptions.interaction,  this.interactionHandler.options);\r\n      util.deepExtend(networkOptions.manipulation, this.manipulation.options);\r\n      util.deepExtend(networkOptions.physics,      this.physics.options);\r\n\r\n      // load globals into the global object\r\n      util.deepExtend(networkOptions.global,       this.canvas.options);\r\n      util.deepExtend(networkOptions.global,       this.options);\r\n\r\n      this.configurator.setModuleOptions(networkOptions);\r\n    }\r\n\r\n    // handle network global options\r\n    if (options.clickToUse !== undefined) {\r\n      if (options.clickToUse === true) {\r\n        if (this.activator === undefined) {\r\n          this.activator = new Activator(this.canvas.frame);\r\n          this.activator.on('change', () => {this.body.emitter.emit(\"activate\")});\r\n        }\r\n      }\r\n      else {\r\n        if (this.activator !== undefined) {\r\n          this.activator.destroy();\r\n          delete this.activator;\r\n        }\r\n        this.body.emitter.emit(\"activate\");\r\n      }\r\n    }\r\n    else {\r\n      this.body.emitter.emit(\"activate\");\r\n    }\r\n\r\n    this.canvas.setSize();\r\n    // start the physics simulation. Can be safely called multiple times.\r\n    this.body.emitter.emit(\"startSimulation\");\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Update the visible nodes and edges list with the most recent node state.\r\n *\r\n * Visible nodes are stored in this.body.nodeIndices.\r\n * Visible edges are stored in this.body.edgeIndices.\r\n * A node or edges is visible if it is not hidden or clustered.\r\n *\r\n * @private\r\n */\r\nNetwork.prototype._updateVisibleIndices = function () {\r\n  let nodes = this.body.nodes;\r\n  let edges = this.body.edges;\r\n  this.body.nodeIndices = [];\r\n  this.body.edgeIndices = [];\r\n\r\n  for (let nodeId in nodes) {\r\n    if (nodes.hasOwnProperty(nodeId)) {\r\n      if (!this.clustering._isClusteredNode(nodeId) && nodes[nodeId].options.hidden === false) {\r\n        this.body.nodeIndices.push(nodes[nodeId].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let edgeId in edges) {\r\n    if (edges.hasOwnProperty(edgeId)) {\r\n      let edge = edges[edgeId];\r\n\r\n      // It can happen that this is executed *after* a node edge has been removed,\r\n      // but *before* the edge itself has been removed. Taking this into account.\r\n      let fromNode = nodes[edge.fromId];\r\n      let toNode   = nodes[edge.toId];\r\n      let edgeNodesPresent = (fromNode !== undefined) && (toNode !== undefined);\r\n\r\n      let isVisible =\r\n          !this.clustering._isClusteredEdge(edgeId)\r\n        && edge.options.hidden === false\r\n        && edgeNodesPresent\r\n        && fromNode.options.hidden === false  // Also hidden if any of its connecting nodes are hidden\r\n        && toNode.options.hidden === false;   // idem\r\n\r\n      if (isVisible) {\r\n        this.body.edgeIndices.push(edge.id);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Bind all events\r\n */\r\nNetwork.prototype.bindEventListeners = function () {\r\n  // This event will trigger a rebuilding of the cache everything.\r\n  // Used when nodes or edges have been added or removed.\r\n  this.body.emitter.on(\"_dataChanged\", () => {\r\n    this.edgesHandler._updateState();\r\n    this.body.emitter.emit(\"_dataUpdated\");\r\n  });\r\n\r\n  // this is called when options of EXISTING nodes or edges have changed.\r\n  this.body.emitter.on(\"_dataUpdated\", () => {\r\n    // Order important in following block\r\n    this.clustering._updateState();\r\n    this._updateVisibleIndices();\r\n\r\n    this._updateValueRange(this.body.nodes);\r\n    this._updateValueRange(this.body.edges);\r\n    // start simulation (can be called safely, even if already running)\r\n    this.body.emitter.emit(\"startSimulation\");\r\n    this.body.emitter.emit(\"_requestRedraw\");\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Set nodes and edges, and optionally options as well.\r\n *\r\n * @param {Object} data              Object containing parameters:\r\n *                                   {Array | DataSet | DataView} [nodes] Array with nodes\r\n *                                   {Array | DataSet | DataView} [edges] Array with edges\r\n *                                   {String} [dot] String containing data in DOT format\r\n *                                   {String} [gephi] String containing data in gephi JSON format\r\n *                                   {Options} [options] Object with options\r\n */\r\nNetwork.prototype.setData = function (data) {\r\n  // reset the physics engine.\r\n  this.body.emitter.emit(\"resetPhysics\");\r\n  this.body.emitter.emit(\"_resetData\");\r\n\r\n  // unselect all to ensure no selections from old data are carried over.\r\n  this.selectionHandler.unselectAll();\r\n\r\n  if (data && data.dot && (data.nodes || data.edges)) {\r\n    throw new SyntaxError('Data must contain either parameter \"dot\" or ' +\r\n      ' parameter pair \"nodes\" and \"edges\", but not both.');\r\n  }\r\n\r\n  // set options\r\n  this.setOptions(data && data.options);\r\n  // set all data\r\n  if (data && data.dot) {\r\n    console.log('The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);');\r\n    // parse DOT file\r\n    var dotData = dotparser.DOTToGraph(data.dot);\r\n    this.setData(dotData);\r\n    return;\r\n  }\r\n  else if (data && data.gephi) {\r\n    // parse DOT file\r\n    console.log('The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);');\r\n    var gephiData = gephiParser.parseGephi(data.gephi);\r\n    this.setData(gephiData);\r\n    return;\r\n  }\r\n  else {\r\n    this.nodesHandler.setData(data && data.nodes, true);\r\n    this.edgesHandler.setData(data && data.edges, true);\r\n  }\r\n\r\n  // emit change in data\r\n  this.body.emitter.emit(\"_dataChanged\");\r\n\r\n  // emit data loaded\r\n  this.body.emitter.emit(\"_dataLoaded\");\r\n\r\n  // find a stable position or start animating to a stable position\r\n  this.body.emitter.emit(\"initPhysics\");\r\n};\r\n\r\n\r\n/**\r\n * Cleans up all bindings of the network, removing it fully from the memory IF the variable is set to null after calling this function.\r\n * var network = new vis.Network(..);\r\n * network.destroy();\r\n * network = null;\r\n */\r\nNetwork.prototype.destroy = function () {\r\n  this.body.emitter.emit(\"destroy\");\r\n  // clear events\r\n  this.body.emitter.off();\r\n  this.off();\r\n\r\n  // delete modules\r\n  delete this.groups;\r\n  delete this.canvas;\r\n  delete this.selectionHandler;\r\n  delete this.interactionHandler;\r\n  delete this.view;\r\n  delete this.renderer;\r\n  delete this.physics;\r\n  delete this.layoutEngine;\r\n  delete this.clustering;\r\n  delete this.manipulation;\r\n  delete this.nodesHandler;\r\n  delete this.edgesHandler;\r\n  delete this.configurator;\r\n  delete this.images;\r\n\r\n  for (var nodeId in this.body.nodes) {\r\n    if (!this.body.nodes.hasOwnProperty(nodeId)) continue;\r\n    delete this.body.nodes[nodeId];\r\n  }\r\n\r\n  for (var edgeId in this.body.edges) {\r\n    if (!this.body.edges.hasOwnProperty(edgeId)) continue;\r\n    delete this.body.edges[edgeId];\r\n  }\r\n\r\n  // remove the container and everything inside it recursively\r\n  util.recursiveDOMDelete(this.body.container);\r\n};\r\n\r\n\r\n/**\r\n * Update the values of all object in the given array according to the current\r\n * value range of the objects in the array.\r\n * @param {Object} obj    An object containing a set of Edges or Nodes\r\n *                        The objects must have a method getValue() and\r\n *                        setValueRange(min, max).\r\n * @private\r\n */\r\nNetwork.prototype._updateValueRange = function (obj) {\r\n  var id;\r\n\r\n  // determine the range of the objects\r\n  var valueMin = undefined;\r\n  var valueMax = undefined;\r\n  var valueTotal = 0;\r\n  for (id in obj) {\r\n    if (obj.hasOwnProperty(id)) {\r\n      var value = obj[id].getValue();\r\n      if (value !== undefined) {\r\n        valueMin = (valueMin === undefined) ? value : Math.min(value, valueMin);\r\n        valueMax = (valueMax === undefined) ? value : Math.max(value, valueMax);\r\n        valueTotal += value;\r\n      }\r\n    }\r\n  }\r\n\r\n  // adjust the range of all objects\r\n  if (valueMin !== undefined && valueMax !== undefined) {\r\n    for (id in obj) {\r\n      if (obj.hasOwnProperty(id)) {\r\n        obj[id].setValueRange(valueMin, valueMax, valueTotal);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Returns true when the Network is active.\r\n * @returns {boolean}\r\n */\r\nNetwork.prototype.isActive = function () {\r\n  return !this.activator || this.activator.active;\r\n};\r\n\r\n\r\nNetwork.prototype.setSize             = function() {return this.canvas.setSize.apply(this.canvas,arguments);};\r\nNetwork.prototype.canvasToDOM         = function() {return this.canvas.canvasToDOM.apply(this.canvas,arguments);};\r\nNetwork.prototype.DOMtoCanvas         = function() {return this.canvas.DOMtoCanvas.apply(this.canvas,arguments);};\r\nNetwork.prototype.findNode            = function() {return this.clustering.findNode.apply(this.clustering,arguments);};\r\nNetwork.prototype.isCluster           = function() {return this.clustering.isCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.openCluster         = function() {return this.clustering.openCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.cluster             = function() {return this.clustering.cluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.getNodesInCluster   = function() {return this.clustering.getNodesInCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterByConnection = function() {return this.clustering.clusterByConnection.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterByHubsize    = function() {return this.clustering.clusterByHubsize.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterOutliers     = function() {return this.clustering.clusterOutliers.apply(this.clustering,arguments);};\r\nNetwork.prototype.getSeed             = function() {return this.layoutEngine.getSeed.apply(this.layoutEngine,arguments);};\r\nNetwork.prototype.enableEditMode      = function() {return this.manipulation.enableEditMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.disableEditMode     = function() {return this.manipulation.disableEditMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.addNodeMode         = function() {return this.manipulation.addNodeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editNode            = function() {return this.manipulation.editNode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editNodeMode        = function() {console.log(\"Deprecated: Please use editNode instead of editNodeMode.\"); return this.manipulation.editNode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.addEdgeMode         = function() {return this.manipulation.addEdgeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editEdgeMode        = function() {return this.manipulation.editEdgeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.deleteSelected      = function() {return this.manipulation.deleteSelected.apply(this.manipulation,arguments);};\r\nNetwork.prototype.getPositions        = function() {return this.nodesHandler.getPositions.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.storePositions      = function() {return this.nodesHandler.storePositions.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.moveNode            = function() {return this.nodesHandler.moveNode.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.getBoundingBox      = function() {return this.nodesHandler.getBoundingBox.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.getConnectedNodes   = function(objectId) {\r\n  if (this.body.nodes[objectId] !== undefined) {\r\n    return this.nodesHandler.getConnectedNodes.apply(this.nodesHandler,arguments);\r\n  }\r\n  else {\r\n    return this.edgesHandler.getConnectedNodes.apply(this.edgesHandler,arguments);\r\n  }\r\n};\r\nNetwork.prototype.getConnectedEdges   = function() {return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.startSimulation     = function() {return this.physics.startSimulation.apply(this.physics,arguments);};\r\nNetwork.prototype.stopSimulation      = function() {return this.physics.stopSimulation.apply(this.physics,arguments);};\r\nNetwork.prototype.stabilize           = function() {return this.physics.stabilize.apply(this.physics,arguments);};\r\nNetwork.prototype.getSelection        = function() {return this.selectionHandler.getSelection.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.setSelection        = function() {return this.selectionHandler.setSelection.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getSelectedNodes    = function() {return this.selectionHandler.getSelectedNodes.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getSelectedEdges    = function() {return this.selectionHandler.getSelectedEdges.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getNodeAt           = function() {\r\n  var node = this.selectionHandler.getNodeAt.apply(this.selectionHandler,arguments);\r\n  if (node !== undefined && node.id !== undefined) {\r\n    return node.id;\r\n  }\r\n  return node;\r\n};\r\nNetwork.prototype.getEdgeAt           = function() {\r\n    var edge = this.selectionHandler.getEdgeAt.apply(this.selectionHandler,arguments);\r\n    if (edge !== undefined && edge.id !== undefined) {\r\n      return edge.id;\r\n    }\r\n    return edge;\r\n  };\r\nNetwork.prototype.selectNodes         = function() {return this.selectionHandler.selectNodes.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.selectEdges         = function() {return this.selectionHandler.selectEdges.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.unselectAll         = function() {\r\n  this.selectionHandler.unselectAll.apply(this.selectionHandler,arguments);\r\n  this.redraw();\r\n};\r\nNetwork.prototype.redraw              = function() {return this.renderer.redraw.apply(this.renderer,arguments);};\r\nNetwork.prototype.getScale            = function() {return this.view.getScale.apply(this.view,arguments);};\r\nNetwork.prototype.getViewPosition     = function() {return this.view.getViewPosition.apply(this.view,arguments);};\r\nNetwork.prototype.fit                 = function() {return this.view.fit.apply(this.view,arguments);};\r\nNetwork.prototype.moveTo              = function() {return this.view.moveTo.apply(this.view,arguments);};\r\nNetwork.prototype.focus               = function() {return this.view.focus.apply(this.view,arguments);};\r\nNetwork.prototype.releaseNode         = function() {return this.view.releaseNode.apply(this.view,arguments);};\r\nNetwork.prototype.getOptionsFromConfigurator = function() {\r\n  let options = {};\r\n  if (this.configurator) {\r\n    options = this.configurator.getOptions.apply(this.configurator);\r\n  }\r\n  return options;\r\n};\r\n\r\n\r\n\r\nmodule.exports = Network;\r\n"},"lineCount":544}},"hash":"c14f319336b1d04370fc5d2960699c12","cacheData":{"env":{}}}